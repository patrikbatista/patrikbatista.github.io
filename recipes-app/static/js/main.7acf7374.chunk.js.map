{"version":3,"sources":["utils/fetch/index.js","images/shareIcon.svg","images/searchIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/whiteHeartIcon.svg","redux/actions/index.js","images/blackHeartIcon.svg","Components/atoms/Input.jsx","Components/atoms/Button.jsx","Components/atoms/PageTitle.jsx","Components/atoms/LinkButton.jsx","Components/atoms/Category.jsx","Components/atoms/Ingredient.jsx","Components/atoms/RecomendationCard.jsx","Components/atoms/AllCategories.jsx","Components/atoms/YoutubeVideo.jsx","utils/localStorage/index.js","Components/atoms/RecipeButtonStatus.jsx","Components/atoms/IngredientStep.jsx","Components/molecules/RecipeCard.jsx","Components/molecules/SearchBar.jsx","Components/molecules/Footer.jsx","Components/molecules/CategoryContainer.jsx","Components/molecules/IngredientsContainer.jsx","Components/molecules/RecommendationContainer.jsx","Components/organisms/Search.jsx","Components/organisms/RecipeCardsContainer.jsx","Components/pages/Main/Drinks.jsx","Components/pages/Explore/Explore.jsx","Components/pages/Explore/ExploreDrinks.jsx","Components/pages/Explore/ExploreFoods.jsx","Components/molecules/CardsIngredientsContainer.jsx","Components/pages/Explore/ExploreFoodIngredients.jsx","Components/pages/Explore/ExploreDrinkIngredients.jsx","Components/pages/Explore/ExploreOrigin.jsx","Components/pages/Main/Foods.jsx","utils/verify/index.js","Components/pages/Login.jsx","Components/atoms/LogoutButton.jsx","Components/atoms/RecipeDoneButton.jsx","Components/atoms/RecipeFavoriteButton.jsx","Components/molecules/ProfileContainer.jsx","Components/pages/Profile.jsx","Components/atoms/FavoriteButton.jsx","Components/molecules/RecipeDoneCard.jsx","Components/organisms/RecipeDoneContainer.jsx","Components/pages/Status/RecipesDone.jsx","Components/pages/Status/RecipesFavorites.jsx","Components/atoms/RecipeButtonFinished.jsx","Components/atoms/ShareButton.jsx","Components/organisms/RecipeDetails.jsx","Components/pages/Details/DrinkDetails.jsx","Components/pages/Details/FoodDetails.jsx","Components/pages/NotFound.jsx","Components/pages/InProgress/FoodInProgress.jsx","Components/pages/InProgress/DrinkInProgress.jsx","App.js","serviceWorker.js","redux/reducers/searchReducer.js","redux/reducers/recipeReducers.js","redux/reducers/buttonFinished.js","redux/reducers/index.js","redux/store/index.js","index.js","images/profileIcon.svg"],"names":["handleOneResult","result","category","length","window","location","href","idMeal","idDrink","fetchFilterRecipes","option","word","a","response","data","fetch","json","meals","drinks","global","alert","fetchRecipes","fetchCategories","fetchByCategory","foodOrMeal","console","log","randomFood","randomDrink","module","exports","SET_SEARCH_OPTION","SET_WORD_SEARCHED","REQUEST_RECIPES","RECEIVE_RECIPES","RECEIVE_CATEGORIES","REQUEST_CATEGORIES","SET_DISABLED","INGREDIENT","setIsIngredient","type","setSearchOption","payload","setWordSearched","requestRecipes","receiveRecipes","setDisabled","getFilteredRecipes","wordSearched","dispatch","then","catch","getRecipes","getCategories","getRecipesByCategory","Input","placeholder","testId","name","onChange","value","data-testid","Button","children","disabled","PageTitle","LinkButton","src","testid","alt","handleClick","useState","redirect","setRedirect","to","onClick","defaultProps","connect","fillRecipesByCategory","c","f","fillRecipes","foodOrDrink","categoryName","isActive","setIsActive","id","Ingredient","index","ingredient","measurement","RecommendationCard","recommendation","style","width","height","backgroundColor","marginRight","fillListOfRecipes","YoutubeVideo","urlVideo","url","videoId","split","opts","playerVars","autoplay","onReady","event","target","pauseVideo","getRecipesInProgress","JSON","parse","localStorage","getItem","saveRecipeInProgress","recipeId","inProgressRecipes","newProgressRecipes","setItem","stringify","cocktails","getIngredientsInProgress","getFavoriteRecipes","getDoneRecipes","RecipeButtonStatus","ingredients","recipeStatus","setRecipeStatus","useEffect","getStatusOfRecipe","with","position","bottom","setButtonFinished","htmlFor","className","defaultChecked","some","i","checked","filter","ingredientInProgress","removeIngredientRecipeInProgress","checkboxes","document","querySelectorAll","Array","from","checkbox","getDisabled","RecipeCard","recipe","aria-hidden","setOption","setWord","searched","fetchReceitas","o","w","radioOption","setRadioOption","wordToSearch","setWordToSearch","onSubmit","preventDefault","fillListOfCategories","setIsIngredientFalse","drinkIcon","exploreIcon","mealIcon","CategoryContainer","categories","slice","map","strCategory","key","IngredientsContainer","measurements","status","RecommendationContainer","recommendations","setRecommendations","fetchRecommendations","display","overflowX","overflowY","whiteSpace","Search","showSearchBar","setShowSearchBar","searchIcon","RecipeCardsContainer","recipes","state","loaded","buttonLoaded","isIngredient","profileIcon","Explore","ExploreDrinks","redirectId","setRedirectId","ExploreFoods","saveRecipes","handleRecipes","urlIngredient","strIngredient","strIngredient1","setIngredients","getIngredients","areas","setAreas","getAreas","handleArea","area","strArea","emailVerification","email","test","passwordVerification","password","Login","setEmail","setPassword","user","saveUser","e","LogoutButton","clear","RecipeDoneButton","RecipeFavoriteButton","ProfileContainer","Profile","FavoriteButton","favorite","isFavorite","setIsFavorite","favoriteRecipes","getFavoriteRecipeExistence","blackHeartIcon","whiteHeartIcon","newFavoriteRecipes","removeFavoriteRecipe","getElementById","remove","newRecipe","alcoholicOrNot","strAlcoholic","image","saveFavoriteRecipes","RecipeDoneCard","doneDate","shareIcon","toString","newUrl","navigator","clipboard","writeText","alerta","createElement","innerHTML","classList","add","body","appendChild","tags","tag","RecipeDoneContainer","RecipesDone","setRecipes","RecipesFavorites","React","button","strTags","doneRecipes","newDoneRecipes","saveDoneRecipe","ShareButton","RecipeDetails","getRecipeIngredients","push","getRecipeMeasurements","strInstructions","strYoutube","statusOfRecipe","generateStatusButton","DrinkDetails","setRecipe","useParams","fetchRecipe","FoodDetails","NotFound","FoodInProgress","DrinkInProgress","App","exact","path","component","Foods","Drinks","ExploreFoodIngredients","ExploreDrinkIngredients","ExploreOrigin","Boolean","hostname","match","INITIAL_STATE","searchReducer","action","recipeReducer","rootReducer","combineReducers","buttonFinished","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"+WAAMA,EAAkB,SAACC,EAAQC,GACT,IAAlBD,EAAOE,SACQ,SAAbD,EACFE,OAAOC,SAASC,KAAhB,mBAAmCL,EAAO,GAAGM,QACvB,aAAbL,IACTE,OAAOC,SAASC,KAAhB,mBAAmCL,EAAO,GAAGO,YAKtCC,EAAkB,uCAAG,WAAOC,EAAQC,EAAMT,GAArB,mBAAAU,EAAA,sDAC5BC,EAAW,GACXC,EAAO,GACPb,EAAS,GAHmB,KAIxBS,EAJwB,OAK3B,gBAL2B,OAW3B,SAX2B,QAiB3B,iBAjB2B,wCAMbK,MAAM,kBAAD,OAAmBb,EAAnB,6CAAgES,IANxD,cAM9BE,EAN8B,iBAOjBA,EAASG,OAPQ,eAO9BF,EAP8B,OAQ9Bb,EAAsB,SAAbC,EAAsBY,EAAKG,MAAQH,EAAKI,OACjDlB,EAAgBC,EAAQC,GATM,kBAUvBD,GAVuB,yBAYbc,MAAM,kBAAD,OAAmBb,EAAnB,6CAAgES,IAZxD,eAY9BE,EAZ8B,iBAajBA,EAASG,OAbQ,eAa9BF,EAb8B,OAc9Bb,EAAsB,SAAbC,EAAsBY,EAAKG,MAAQH,EAAKI,OACjDlB,EAAgBC,EAAQC,GAfM,kBAgBvBD,GAhBuB,aAkB1BU,EAAKR,OAAS,GAlBY,wBAmB5BgB,EAAOC,MAAM,iDAnBe,8CAsBXL,MAAM,kBAAD,OAAmBb,EAAnB,6CAAgES,IAtB1D,eAsB5BE,EAtB4B,iBAuBfA,EAASG,OAvBM,eAuB5BF,EAvB4B,OAwB5Bb,EAAsB,SAAbC,EAAsBY,EAAKG,MAAQH,EAAKI,OACjDlB,EAAgBC,EAAQC,GAzBI,kBA0BrBD,GA1BqB,iCA6BvB,MA7BuB,4CAAH,0DAiClBoB,EAAY,uCAAG,WAAOnB,GAAP,iBAAAU,EAAA,sDACtBC,EAAW,GACXC,EAAO,GAFe,KAGlBZ,EAHkB,OAIrB,SAJqB,OAQrB,UARqB,wCAKPa,MAAM,yDALC,cAKxBF,EALwB,iBAMXA,EAASG,OANE,eAMxBF,EANwB,yBAOjBA,EAAKG,OAPY,yBASPF,MAAM,6DATC,eASxBF,EATwB,iBAUXA,EAASG,OAVE,eAUxBF,EAVwB,yBAWjBA,EAAKI,QAXY,gFAAH,sDAiBZI,EAAe,uCAAG,WAAOpB,GAAP,iBAAAU,EAAA,sDACzBC,EAAW,GACXC,EAAO,GAFkB,KAGrBZ,EAHqB,OAIxB,SAJwB,OAQxB,UARwB,wCAKVa,MAAM,2DALI,cAK3BF,EAL2B,iBAMdA,EAASG,OANK,eAM3BF,EAN2B,yBAOpBA,EAAKG,OAPe,yBASVF,MAAM,+DATI,eAS3BF,EAT2B,iBAUdA,EAASG,OAVK,eAU3BF,EAV2B,yBAWpBA,EAAKI,QAXe,gFAAH,sDAiBfK,EAAe,uCAAG,WAAOrB,EAAUsB,GAAjB,iBAAAZ,EAAA,sDACzBC,EAAW,GACXC,EAAO,GAFkB,KAGrBU,EAHqB,OAIxB,SAJwB,OASxB,UATwB,wCAKVT,MAAM,wDAAD,OAAyDb,IALpD,cAK3BW,EAL2B,iBAMdA,EAASG,OANK,eAM3BF,EAN2B,OAO3BW,QAAQC,IAAIZ,GAPe,kBAQpBA,EAAKG,OARe,yBAUVF,MAAM,4DAAD,OAA6Db,IAVxD,eAU3BW,EAV2B,iBAWdA,EAASG,OAXK,eAW3BF,EAX2B,yBAYpBA,EAAKI,QAZe,gFAAH,wDAkBrB,SAAeS,IAAtB,+B,4CAAO,8BAAAf,EAAA,4DACY,qDADZ,SAEkBG,MADN,sDADZ,cAECF,EAFD,gBAGcA,EAASG,OAHvB,cAGCF,EAHD,yBAIEA,EAAKG,MAAM,GAAGV,QAJhB,4C,sBAOA,SAAeqB,IAAtB,+B,4CAAO,8BAAAhB,EAAA,4DACY,yDADZ,SAEkBG,MADN,0DADZ,cAECF,EAFD,gBAGcA,EAASG,OAHvB,cAGCF,EAHD,yBAIEA,EAAKI,OAAO,GAAGV,SAJjB,4C,8DCtGPqB,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,4C,gCCA3C,0lBASaC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAe,eACfC,EAAa,aAEbC,EAAkB,iBAAO,CACpCC,KAAMF,IAGKG,EAAkB,SAACC,GAAD,MAAc,CAC3CF,KAAMT,EACNW,YAGWC,EAAkB,SAACD,GAAD,MAAc,CAC3CF,KAAMR,EACNU,YAGIE,EAAiB,iBAAO,CAC5BJ,KAAMP,IAGKY,EAAiB,SAACH,GAAD,MAAc,CAC1CF,KAAMN,EACNQ,YAYWI,EAAc,SAACJ,GAAD,MAAc,CACvCF,KAAMH,EACNK,YAGK,SAASK,EAAmBrC,EAAQsC,EAAc9C,GACvD,OAAO,SAAC+C,GAEN,OADAA,EAASL,KACFnC,YAAmBC,EAAQsC,EAAc9C,GAC7CgD,MAAK,SAACrC,GAAD,OAAcoC,EAASJ,EAAehC,OAC3CsC,OAAM,kBAAMhC,EAAOC,MArDL,2EAyDd,SAASgC,EAAWlD,GACzB,OAAO,SAAC+C,GAEN,OADAA,EAASL,KACFvB,YAAanB,GACjBgD,MAAK,SAACrC,GAAD,OAAcoC,EAASJ,EAAehC,OAC3CsC,OAAM,kBAAMhC,EAAOC,MAAM,wDAIzB,SAASiC,EAAcnD,GAC5B,OAAO,SAAC+C,GAEN,OADAA,EAlC6B,CAC/BT,KAAMJ,IAkCGd,YAAgBpB,GACpBgD,MAAK,SAACrC,GAAD,OAAcoC,EAhCqB,CAC7CT,KAAML,EACNO,QA8BmD7B,OAC9CsC,OAAM,kBAAMhC,EAAOC,MAAM,0DAIzB,SAASkC,EAAqBpD,EAAUsB,GAC7C,OAAO,SAACyB,GAEN,OADAA,EAASL,KACFrB,YAAgBrB,EAAUsB,GAC9B0B,MAAK,SAACrC,GAAD,OAAcoC,EAASJ,EAAehC,OAC3CsC,OAAM,kBAAMhC,EAAOC,MAAM,2D,qCCvFhCS,EAAOC,QAAU,IAA0B,4C,2KCqB5ByB,EAlBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,SAAUC,EAAxC,EAAwCA,MAAOpB,EAA/C,EAA+CA,KAA/C,OAA2D,2BACvEA,KAAOA,EACPkB,KAAOA,EACPE,MAAQA,EACRD,SAAWA,EACXE,cAAcJ,EACdD,YAAcA,KCUDM,EAhBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUN,EAAb,EAAaA,OAAQO,EAArB,EAAqBA,SAArB,OACb,4BACExB,KAAK,SACLwB,SAAWA,EACXH,cAAcJ,GAEbM,ICIUE,EAVG,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAH,OAChB,wBAAIF,cAAY,cACbE,I,OCDCG,EAAa,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,IAAK/D,EAAwB,EAAxBA,KAAMgE,EAAkB,EAAlBA,YAAkB,EAC9BC,oBAAS,GADqB,mBACvDC,EADuD,KAC7CC,EAD6C,KAG9D,OAAID,EAAiB,kBAAC,IAAD,CAAUE,GAAKpE,IAGlC,2BACEkC,KAAK,QACL2B,IAAMA,EACNE,IAAMA,EACNR,cAAcO,EACdO,QAAU,WACRL,IACAG,GAAY,OAcpBP,EAAWU,aAAe,CACxBN,YAAa,cAGAJ,Q,OCMAW,cAAQ,MALI,SAAC5B,GAAD,MAAe,CACxC6B,sBAAuB,SAACC,EAAGC,GAAJ,OAAU/B,EAASK,YAAqByB,EAAGC,KAClEC,YAAa,SAACC,GAAD,OAAiBjC,EAASG,YAAW8B,QAGrCL,EApCE,SAAC,GAEX,IADLM,EACI,EADJA,aAAcD,EACV,EADUA,YAAaJ,EACvB,EADuBA,sBAAuBG,EAC9C,EAD8CA,YAC9C,EAC4BV,oBAAS,GADrC,mBACGa,EADH,KACaC,EADb,KAWJ,OACE,4BACE7C,KAAK,SACLqB,cAAA,UAAiBsB,EAAjB,oBACAG,GAAKH,EACLR,QAbgB,WAClBU,GAAaD,GACTA,EACFH,EAAYC,GAEZJ,EAAsBK,EAAcD,KAUnCC,MCRQI,EAdI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAYC,EAAtB,EAAsBA,YAAtB,OACjB,uBACE7B,cAAA,UAAiB2B,EAAjB,iCAECE,EAAW,UAAMD,EAAN,cAAsBC,GAAgBD,ICwBvCE,EA5BY,SAAC,GAA4C,IAA1CH,EAAyC,EAAzCA,MAAOI,EAAkC,EAAlCA,eAAgBV,EAAkB,EAAlBA,YAEnD,OADAzD,QAAQC,IAAIkE,GAEV,yBACEC,MAAQ,CACNC,MAAO,QACPC,OAAQ,QACRC,gBAAiB,SACjBC,YAAa,SAEfpC,cAAA,UAAiB2B,EAAjB,wBAEA,wBAAI3B,cAAA,UAAiB2B,EAAjB,yBACDI,EAAe,MAAD,OAAOV,OCYfL,cAAQ,MAJI,SAAC5B,GAAD,MAAe,CACxCiD,kBAAmB,SAAChG,GAAD,OAAc+C,EAASG,YAAWlD,QAGxC2E,EAvBO,SAAC,GAAD,IACpBK,EADoB,EACpBA,YAAagB,EADO,EACPA,kBADO,OAGpB,4BACE1D,KAAK,SACLqB,cAAY,sBACZc,QAAU,WACRuB,EAAkBhB,KAJtB,U,QCmBaiB,EAvBM,SAAC,GAAa,IAcRC,EAdHC,EAAU,EAAVA,IAgBtB,OAAO,kBAAC,IAAD,CAASC,SAFSF,EAEiBC,EAFJD,EAASG,MAAM,MAAM,IAEVC,KAfpC,CACXT,OAAQ,MACRD,MAAO,MACPW,WAAY,CAEVC,SAAU,IAUiDC,QAN/C,SAACC,GACfA,EAAMC,OAAOC,iB,uBCHV,SAASC,IAEd,OAD0BC,KAAKC,MAAMC,aAAaC,QAAQ,sBAIrD,SAASC,EAAqBlC,EAAamC,EAAU5B,GAC1D,GAAoB,SAAhBP,EACF,GAAK6B,IAKE,CACL,IAAMO,EAAoBP,IACpBQ,EAAkB,2BACnBD,GADmB,IAEtBrG,MAAM,2BACDqG,EAAkBrG,OADlB,kBAEFoG,EAFE,sBAEaC,EAAkBrG,MAAMoG,IAFrC,CAEgD5B,QAGvDyB,aAAaM,QAAQ,oBAAqBR,KAAKS,UAAUF,QAd9B,CAC3B,IAAMtG,EAAK,eACRoG,EAAW,CAAC5B,IAEfyB,aAAaM,QAAQ,oBAAqBR,KAAKS,UAAU,CAAExG,gBAYxD,GAAoB,UAAhBiE,EACT,GAAK6B,IAKE,CACL,IAAMO,EAAoBP,IACpBQ,EAAkB,2BACnBD,GADmB,IAEtBI,UAAU,2BACLJ,EAAkBI,WADd,kBAENL,EAFM,sBAESC,EAAkBI,UAAUL,IAFrC,CAEgD5B,QAG3DyB,aAAaM,QAAQ,oBAAqBR,KAAKS,UAAUF,QAd9B,CAC3B,IAAMG,EAAS,eACZL,EAAW,CAAC5B,IAEfyB,aAAaM,QAAQ,oBAAqBR,KAAKS,UAAU,CAAEC,gBA4C1D,SAASC,EAAyBzC,EAAamC,GACpD,GAAoB,SAAhBnC,EAAwB,CAC1B,IAAMoC,EAAoBP,IAC1B,GAAIO,GAAqBA,EAAkBrG,MACzC,OAAOqG,EAAkBrG,MAAMoG,GAGnC,GAAoB,UAAhBnC,EAAyB,CAC3B,IAAMoC,EAAoBP,IAC1B,GAAIO,GAAqBA,EAAkBI,UACzC,OAAOJ,EAAkBI,UAAUL,GAGvC,MAAO,GAiBF,SAASO,IAEd,OADwBZ,KAAKC,MAAMC,aAAaC,QAAQ,oBAqCnD,SAASU,IAEd,OADgBb,KAAKC,MAAMC,aAAaC,QAAQ,gBCpJlD,IAwDeW,EAxDY,SAAC,GAA4C,IAA1CT,EAAyC,EAAzCA,SAAUnC,EAA+B,EAA/BA,YAAa6C,EAAkB,EAAlBA,YAAkB,EAC7BxD,oBAAS,GADoB,mBAC9DyD,EAD8D,KAChDC,EADgD,OAErC1D,oBAAS,GAF4B,mBAE9DC,EAF8D,KAEpDC,EAFoD,KAQrE,OAJAyD,qBAAU,WACRD,ED0FG,SAA2BZ,GAChC,IAAMC,EAAoBP,IAC1B,QAAIO,IACEA,EAAkBrG,QACXqG,EAAkBrG,MAAMoG,KAE/BC,EAAkBI,aACXJ,EAAkBI,UAAUL,ICjGvBc,CAAkBd,MACjC,CAACA,IAEA7C,EACqB,SAAhBU,EACH,kBAAC,IAAD,CAAUR,GAAE,mBAAe2C,EAAf,kBACZ,kBAAC,IAAD,CAAU3C,GAAE,mBAAe2C,EAAf,kBAIhB,6BACGW,EACC,4BACEnC,MAAQ,CACNuC,KAAM,OACNC,SAAU,QACVC,OAAQ,KAEV9F,KAAK,SACLqB,cAAY,oBAPd,qBAaE,4BACEgC,MAAQ,CACNuC,KAAM,OACNC,SAAU,QACVC,OAAQ,KAEV9F,KAAK,SACLqB,cAAY,mBACZc,QAAU,WACRyC,EAAqBlC,EAAamC,EAAUU,GAC5CtD,GAAY,KAVhB,aCwBKI,cAAQ,MAJI,SAAC5B,GAAD,MAAe,CACxCsF,kBAAmB,SAACvE,GAAD,OAAcf,EAASH,YAAYkB,QAGzCa,EA5CQ,SAAC,GAAD,IACrBW,EADqB,EACrBA,MAAOC,EADc,EACdA,WAAYC,EADE,EACFA,YAAaR,EADX,EACWA,YAAaI,EADxB,EACwBA,GAAIiD,EAD5B,EAC4BA,kBAD5B,OAGrB,2BACE1E,cAAA,UAAiB2B,EAAjB,oBACAgD,QAAUhD,GAEV,uBACE3B,cAAA,UAAiB2B,EAAjB,iCAECE,EAAW,UAAMD,EAAN,cAAsBC,GAAgBD,GAEpD,2BACEjD,KAAK,WACL8C,GAAKE,EACLiD,UAAU,kBACV7E,MAAQ6B,EACRiD,eAAiBf,EAAyBzC,EAAaI,GACpDqD,MAAK,SAACC,GAAD,OAAOnD,IAAemD,KAC9BjF,SAAW,YAA6B,EAA1BkD,OAAUgC,QAEpBzB,EAAqBlC,EAAaI,EAAIG,GFmBA,SAACP,EAAamC,EAAU5B,GACtE,GAAoB,SAAhBP,EAAwB,CAC1B,IAAMoC,EAAoBP,IACpBQ,EAAkB,2BACnBD,GADmB,IAEtBrG,MAAM,2BACDqG,EAAkBrG,OADlB,kBAEFoG,EAAWC,EAAkBrG,MAAMoG,GAAUyB,QAC5C,SAACC,GAAD,OAA0BA,IAAyBtD,SAIzDyB,aAAaM,QAAQ,oBAAqBR,KAAKS,UAAUF,IAE3D,GAAoB,UAAhBrC,EAAyB,CAC3B,IAAMoC,EAAoBP,IACpBQ,EAAkB,2BACnBD,GADmB,IAEtBI,UAAU,2BACLJ,EAAkBI,WADd,kBAENL,EAAWC,EAAkBI,UAAUL,GAAUyB,QAChD,SAACC,GAAD,OAA0BA,IAAyBtD,SAIzDyB,aAAaM,QAAQ,oBAAqBR,KAAKS,UAAUF,KE1CnDyB,CAAiC9D,EAAaI,EAAIG,GAEpD8C,EAhCY,WAClB,IAAMU,EAAaC,SAASC,iBAAiB,oBAG7C,OAFwBC,MAAMC,KAAKJ,GACFN,MAAK,SAACW,GAAD,OAAmC,IAArBA,EAAST,WA6BrCU,W,iBCGXC,EAvCI,SAAC,GAAiC,IAA/BhE,EAA8B,EAA9BA,MAAOiE,EAAuB,EAAvBA,OAAQvJ,EAAe,EAAfA,SAAe,EAClBqE,oBAAS,GADS,mBAC3CC,EAD2C,KACjCC,EADiC,KAGlD,OAAID,EACe,SAAbtE,EACK,kBAAC,IAAD,CAAUwE,GAAE,mBAAe+E,EAAOlJ,UAEpC,kBAAC,IAAD,CAAUmE,GAAE,mBAAe+E,EAAOjJ,WAIzC,yBACEmE,QAAU,kBAAMF,GAAY,IAC5BZ,cAAA,UAAiB2B,EAAjB,gBACAkE,eAAA,GAEA,yBACE7F,cAAA,UAAiB2B,EAAjB,aACArB,IAAMsF,EAAO,MAAD,OAAOvJ,EAAP,UACZmE,IAAMoF,EAAO,MAAD,OAAOvJ,MAErB,wBAAI2D,cAAA,UAAiB2B,EAAjB,eAAuCiE,EAAO,MAAD,OAAOvJ,OC6D/C2E,cAAQ,MANI,SAAC5B,GAAD,MAAe,CACxC0G,UAAW,SAACjJ,GAAD,OAAYuC,EAASR,YAAgB/B,KAChDkJ,QAAS,SAACC,GAAD,OAAc5G,EAASN,YAAgBkH,KAChDC,cAAe,SAACC,EAAGC,EAAGjF,GAAP,OAAa9B,EAASF,YAAmBgH,EAAGC,EAAGjF,QAGjDF,EA7EG,SAAC,GAAqD,IAAnD8E,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,QAASE,EAA8B,EAA9BA,cAAe5J,EAAe,EAAfA,SAAe,EAC/BqE,mBAAS,eADsB,mBAC9D0F,EAD8D,KACjDC,EADiD,OAE7B3F,mBAAS,IAFoB,mBAE9D4F,EAF8D,KAEhDC,EAFgD,KAWrE,OACE,0BAAMC,SARa,SAACzD,GACpBA,EAAM0D,iBACNX,EAAUM,GACVL,EAAQO,GACRL,EAAcG,EAAaE,EAAcjK,KAKvC,2BACEsC,KAAK,OACLqB,cAAY,eACZD,MAAQuG,EACRxG,SAAW,SAACiD,GAAD,OAAWwD,EAAgBxD,EAAMC,OAAOjD,UAErD,4BACEpB,KAAK,SACLqB,cAAY,mBAFd,aAMA,6BACE,2BAAO2E,QAAQ,eAAf,cAEE,2BACEhG,KAAK,QACLkB,KAAK,SACLG,cAAY,0BACZyB,GAAG,cACH1B,MAAM,cACND,SAAW,SAACiD,GAAD,OAAWsD,EAAetD,EAAMC,OAAOjD,WAGtD,2BAAO4E,QAAQ,QAAf,OAEE,2BACEhG,KAAK,QACLkB,KAAK,SACLG,cAAY,oBACZyB,GAAG,OACH1B,MAAM,OACND,SAAW,SAACiD,GAAD,OAAWsD,EAAetD,EAAMC,OAAOjD,WAGtD,2BAAO4E,QAAQ,gBAAf,iBAEE,2BACEhG,KAAK,QACLkB,KAAK,SACLG,cAAY,4BACZyB,GAAG,eACH1B,MAAM,eACND,SAAW,SAACiD,GAAD,OAAWsD,EAAetD,EAAMC,OAAOjD,gB,mDChB/CiB,cAAQ,MANI,SAAC5B,GAAD,MAAe,CACxCiD,kBAAmB,SAAChG,GAAD,OAAc+C,EAASG,YAAWlD,KACrDqK,qBAAsB,SAACrK,GAAD,OAAc+C,EAASI,YAAcnD,KAC3DsK,qBAAsB,kBAAMvH,EAASV,mBAGxBsC,EAxCA,SAAC,GAAD,IAAGqB,EAAH,EAAGA,kBAAmBqE,EAAtB,EAAsBA,qBAAsBC,EAA5C,EAA4CA,qBAA5C,OACb,4BAAQ3G,cAAY,SAASgC,MAAQ,CAAEwC,SAAU,QAASC,OAAQ,MAChE,kBAAC,EAAD,CACEnE,IAAMsG,IACNpG,IAAI,QACJ/D,KAAK,WACL8D,OAAO,sBAET,kBAAC,EAAD,CACED,IAAMuG,IACNrG,IAAI,UACJ/D,KAAK,YACL8D,OAAO,uBAET,kBAAC,EAAD,CACED,IAAMwG,IACNtG,IAAI,OACJ/D,KAAK,WACL8D,OAAO,kBACPE,YAAc,WACZ4B,EAAkB,QAClBqE,EAAqB,QACrBC,WCROI,EAhBW,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAY3F,EAAf,EAAeA,YAAf,OACxB,6BACG2F,GAAc,kBAAC,EAAD,CAAe3F,YAAcA,IAC3C2F,GAAcA,EAAWC,MAAM,EALb,GAKgCC,KAAI,gBAAGC,EAAH,EAAGA,YAAH,OAAsB,kBAAC,EAAD,CAC3EC,IAAMD,EACN7F,aAAe6F,EACf9F,YAAcA,SCoBLgG,EA5Bc,SAAC,GAAD,IAAGnD,EAAH,EAAGA,YAAaoD,EAAhB,EAAgBA,aAAcC,EAA9B,EAA8BA,OAAQlG,EAAtC,EAAsCA,YAAaI,EAAnD,EAAmDA,GAAnD,OAC3B,6BACGyC,IACY,eAAXqD,EAA2BrD,EAAYgD,KAAI,SAACtF,EAAYD,GAAb,OAAwB,kBAAC,EAAD,CACjEyF,IAAMzF,EACNA,MAAQA,EACRC,WAAaA,EACbC,YAAcyF,EAAa3F,QACpBuC,EAAYgD,KAAI,SAACtF,EAAYD,GAAb,OAAwB,kBAAC,EAAD,CAC/CyF,IAAMzF,EACNA,MAAQA,EACRC,WAAaA,EACbC,YAAcyF,EAAa3F,GAC3BN,YAAcA,EACdI,GAAKA,U,uBC+BE+F,EA5CiB,SAAC,GAAqB,IAAnBnG,EAAkB,EAAlBA,YAAkB,EACLX,mBAAS,IADJ,mBAC5C+G,EAD4C,KAC3BC,EAD2B,KAG7CC,EAAoB,uCAAG,WAAOtL,GAAP,qBAAAU,EAAA,yDACV,SAAbV,EADuB,iCAEFa,MAAM,6DAFJ,cAEnBF,EAFmB,gBAGNA,EAASG,OAHH,OAGnBF,EAHmB,OAIzByK,EAAmBzK,EAAKI,QAJC,yCAMFH,MAAM,yDANJ,eAMnBF,EANmB,iBAONA,EAASG,OAPH,QAOnBF,EAPmB,OAQzByK,EAAmBzK,EAAKG,OARC,4CAAH,sDAgB1B,OAJAiH,qBAAU,WACRsD,EAAqBtG,KACpB,CAACA,IAGF,yBACEW,MAAQ,CACN4F,QAAS,OACT1F,OAAQ,QACR2F,UAAW,SACXC,UAAW,SACXC,WAAY,WAGbN,GACAA,EAAgBR,MAAM,EAhCjB,GAgCyBC,KAAI,SAACnF,EAAgBJ,GAAjB,OAA4B,kBAAC,EAAD,CAC/DyF,IAAMzF,EACNA,MAAQA,EACRN,YAA8B,SAAhBA,EAAyB,QAAU,OACjDU,eAAiBA,SCdRiG,EArBA,SAAC,GAAkB,IAAhB3L,EAAe,EAAfA,SAAe,EACWqE,oBAAS,GADpB,mBACxBuH,EADwB,KACTC,EADS,KAG/B,OACE,6BACE,2BACEvJ,KAAK,QACL2B,IAAM6H,IACN3H,IAAI,SACJR,cAAY,iBACZc,QAAU,kBAAMoH,GAAkBD,MAEnCA,GAAiB,kBAAC,EAAD,CAAW5L,SAAWA,MCK/B+L,EAhBc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAShM,EAAZ,EAAYA,SAAZ,OAC3B,6BACGgM,GAAWA,EAAQnB,KAAI,SAACtB,EAAQjE,GAAT,OAJR,KAI4BA,GAAyB,kBAAC,EAAD,CACnEyF,IAAMzF,EACNA,MAAQA,EACRtF,SAAWA,EACXuJ,OAASA,S,gBCmDA5E,gBAbS,SAACsH,GAAD,MAAY,CAClCC,OAAQD,EAAMD,QAAQE,OACtBC,aAAcF,EAAMD,QAAQG,aAC5BH,QAASC,EAAMD,QAAQA,QACvBrB,WAAYsB,EAAMD,QAAQrB,WAC1ByB,aAAcH,EAAMD,QAAQI,iBAGH,SAACrJ,GAAD,MAAe,CACxCiD,kBAAmB,SAAChG,GAAD,OAAc+C,EAASG,YAAWlD,KACrDqK,qBAAsB,SAACrK,GAAD,OAAc+C,EAASI,YAAcnD,QAG9C2E,EArDA,SAAC,GAGT,IAFLqH,EAEI,EAFJA,QAASrB,EAEL,EAFKA,WAAYuB,EAEjB,EAFiBA,OAAQC,EAEzB,EAFyBA,aAAcnG,EAEvC,EAFuCA,kBAAmBqE,EAE1D,EAF0DA,qBAC9D+B,EACI,EADJA,aAQA,OANApE,qBAAU,YACHoE,GAAgBJ,GAA8B,IAAnBA,EAAQ/L,SACtC+F,EAAkB,SAClBqE,EAAqB,YAEtB,CAACrE,EAAmBqE,EAAsB+B,EAAcJ,IAEzD,6BACE,gCACE,kBAAC,EAAD,CACE/H,IAAMoI,IACNlI,IAAI,SACJ/D,KAAK,UACL8D,OAAO,oBAET,kBAAC,EAAD,gBACA,kBAAC,EAAD,CAAQlE,SAAS,aAChBmM,GACE,kBAAC,EAAD,CAAmBxB,WAAaA,EAAa3F,YAAY,UAC3DkH,GAAU,kBAAC,EAAD,CAAsBF,QAAUA,EAAUhM,SAAS,WAEhE,kBAAC,EAAD,UCNSsM,GAvBC,kBACd,6BACE,gCACE,kBAAC,EAAD,CACErI,IAAMoI,IACNlI,IAAI,SACJ/D,KAAK,UACL8D,OAAO,oBAET,kBAAC,EAAD,iBACA,kBAAC,IAAD,CAAMM,GAAG,qBACP,4BAAQlC,KAAK,SAASqB,cAAY,gBAAlC,qBAIF,kBAAC,IAAD,CAAMa,GAAG,qBACP,4BAAQlC,KAAK,SAASqB,cAAY,kBAAlC,sBAGJ,kBAAC,EAAD,Q,SCsBW4I,GAvCO,WAAO,IAAD,EACMlI,oBAAS,GADf,mBACnBC,EADmB,KACTC,EADS,OAEUF,mBAAS,IAFnB,mBAEnBmI,EAFmB,KAEPC,EAFO,KAI1B,OAAInI,EACK,kBAAC,IAAD,CAAUE,GAAE,mBAAegI,KAIlC,6BACE,gCACE,kBAAC,EAAD,CACEvI,IAAMoI,IACNlI,IAAI,SACJ/D,KAAK,UACL8D,OAAO,oBAET,kBAAC,EAAD,yBACA,kBAAC,IAAD,CAAMM,GAAG,kCACP,4BAAQlC,KAAK,SAASqB,cAAY,yBAAlC,qBAIF,4BACErB,KAAK,SACLqB,cAAY,mBACZc,QAAO,sBAAG,sBAAA/D,EAAA,kEACR+L,EADQ,SACY/K,eADZ,kCAER6C,GAAY,GAFJ,4CAHZ,mBAWF,kBAAC,EAAD,QCqBSmI,GAvDM,WAAO,IAAD,EACOrI,oBAAS,GADhB,mBAClBC,EADkB,KACRC,EADQ,OAEWF,mBAAS,IAFpB,mBAElBmI,EAFkB,KAENC,EAFM,KAIzB,OAAInI,EACK,kBAAC,IAAD,CAAUE,GAAE,mBAAegI,KAIlC,6BACE,gCACE,kBAAC,EAAD,CACEvI,IAAMoI,IACNlI,IAAI,SACJ/D,KAAK,UACL8D,OAAO,oBAET,kBAAC,EAAD,yBACA,kBAAC,IAAD,CACEM,GAAG,kCAEH,4BACElC,KAAK,SACLqB,cAAY,yBAFd,qBAOF,kBAAC,IAAD,CACEa,GAAG,0BAEH,4BACElC,KAAK,SACLqB,cAAY,mBAFd,wBAQF,4BACErB,KAAK,SACLqB,cAAY,mBACZc,QAAO,sBAAG,sBAAA/D,EAAA,kEACR+L,EADQ,SACYhL,eADZ,kCAER8C,GAAY,GAFJ,4CAHZ,mBAWF,kBAAC,EAAD,QCSSI,eAAQ,MALI,SAAC5B,GAAD,MAAe,CACxC4J,YAAa,SAACX,GAAD,OAAajJ,EAASJ,YAAeqJ,KAClDI,aAAc,kBAAMrJ,EAASV,mBAGhBsC,EA3DmB,SAAC,GAAgD,IAA9CkD,EAA6C,EAA7CA,YAAa8E,EAAgC,EAAhCA,YAAaP,EAAmB,EAAnBA,aACvDQ,EAAa,uCAAG,WAAOrH,GAAP,uBAAA7E,EAAA,6DACdmM,EAAgBtH,EAAWuH,cAC7BvH,EAAWuH,cAAgBvH,EAAWwH,eACpC5G,EAAMZ,EAAWuH,cAAX,+DACgDD,GADhD,mEAEoDA,GAL5C,SAMGhM,MAAMsF,GANT,cAMdxF,EANc,gBAODA,EAASG,OAPR,OAOdF,EAPc,OAQdoL,EAAUpL,EAAKG,MAAQH,EAAKG,MAAQH,EAAKI,OAC/CoL,IACAO,EAAYX,GAVQ,4CAAH,sDAanB,OACE,iCACGnE,EAAY+C,MAAM,EAlBb,IAkBqBC,KAAI,SAACtF,EAAYD,GAAb,OAC7B,kBAAC,IAAD,CACEyF,IAAMzF,EACNd,GAAKe,EAAWuH,cACZ,WAAa,WACjBrI,QAAU,kBAAMmI,EAAcrH,KAE9B,yBACE5B,cAAA,UAAiB2B,EAAjB,oBACAkE,eAAA,GAEA,yBACEvF,IAAG,yBAAqBsB,EAAWuH,cAC/B,OACA,WAFD,qCAEwCvH,EAAWuH,cAClDvH,EAAWuH,cACXvH,EAAWwH,eAJZ,cAKH5I,IAAI,QACJR,cAAA,UAAiB2B,EAAjB,eAEF,uBAAG3B,cAAA,UAAiB2B,EAAjB,eACAC,EAAWuH,cACRvH,EAAWuH,cACXvH,EAAWwH,yBCCdpI,eAAQ,MAJI,SAAC5B,GAAD,MAAe,CACxCgC,YAAa,kBAAMhC,EAASJ,YAAe,CAAC,SAG/BgC,EAvCgB,SAAC,GAAqB,IAAnBI,EAAkB,EAAlBA,YAAkB,EACZV,mBAAS,IADG,mBAC3CwD,EAD2C,KAC9BmF,EAD8B,KAG5CC,EAAc,uCAAG,8BAAAvM,EAAA,sEACEG,MAAM,2DADR,cACfF,EADe,gBAEFA,EAASG,OAFP,OAEfF,EAFe,OAGrBoM,EAAepM,EAAKG,OAHC,2CAAH,qDAWpB,OALAiH,qBAAU,WACRiF,IACAlI,MACC,CAACA,IAGF,6BACE,gCACE,kBAAC,EAAD,CACEd,IAAMoI,IACNlI,IAAI,SACJ/D,KAAK,UACL8D,OAAO,oBAET,kBAAC,EAAD,+BAEF,kBAAC,GAAD,CAA2B2D,YAAcA,IACzC,kBAAC,EAAD,UCaSlD,eAAQ,MAJI,SAAC5B,GAAD,MAAe,CACxCgC,YAAa,kBAAMhC,EAASJ,YAAe,CAAC,SAG/BgC,EAvCiB,SAAC,GAAqB,IAAnBI,EAAkB,EAAlBA,YAAkB,EACbV,mBAAS,IADI,mBAC5CwD,EAD4C,KAC/BmF,EAD+B,KAG7CC,EAAc,uCAAG,8BAAAvM,EAAA,sEACEG,MAAM,+DADR,cACfF,EADe,gBAEFA,EAASG,OAFP,OAEfF,EAFe,OAGrBoM,EAAepM,EAAKI,QAHC,2CAAH,qDAWpB,OALAgH,qBAAU,WACRiF,IACAlI,MACC,CAACA,IAGF,6BACE,gCACE,kBAAC,EAAD,CACEd,IAAMoI,IACNlI,IAAI,SACJ/D,KAAK,UACL8D,OAAO,oBAET,kBAAC,EAAD,+BAEF,kBAAC,GAAD,CAA2B2D,YAAcA,IACzC,kBAAC,EAAD,UC4DSlD,gBAbS,SAACsH,GAAD,MAAY,CAClCC,OAAQD,EAAMD,QAAQE,OACtBC,aAAcF,EAAMD,QAAQG,aAC5BH,QAASC,EAAMD,QAAQA,QACvBrB,WAAYsB,EAAMD,QAAQrB,eAGD,SAAC5H,GAAD,MAAe,CACxCiD,kBAAmB,SAAChG,GAAD,OAAc+C,EAASG,YAAWlD,KACrDqK,qBAAsB,SAACrK,GAAD,OAAc+C,EAASI,YAAcnD,KAC3D+E,YAAa,SAACiH,GAAD,OAAajJ,EAASJ,YAAeqJ,QAGrCrH,EAtFO,SAAC,GAEhB,IADLuH,EACI,EADJA,OAAQF,EACJ,EADIA,QAAShG,EACb,EADaA,kBAAmBqE,EAChC,EADgCA,qBAAsBtF,EACtD,EADsDA,YACtD,EACsBV,mBAAS,IAD/B,mBACG6I,EADH,KACUC,EADV,KAGEC,EAAQ,uCAAG,8BAAA1M,EAAA,sEACQG,MAAM,2DADd,cACTF,EADS,gBAEIA,EAASG,OAFb,OAETF,EAFS,OAGfuM,EAASvM,EAAKG,OAHC,2CAAH,qDAMdiH,qBAAU,WACRoF,IACApH,EAAkB,QAClBqE,EAAqB,UACpB,CAACA,EAAsBrE,IAE1B,IAAMqH,EAAU,uCAAG,iCAAA3M,EAAA,yDACH,SADsBgD,EAAnB,EAASiD,OAAUjD,OAAnB,gBAEfsC,EAAkB,QAFH,uCAIQnF,MAAM,wDAAD,OAAyD6C,IAJtE,cAIT/C,EAJS,iBAKIA,EAASG,OALb,QAKTF,EALS,OAMfmE,EAAYnE,EAAKG,OANF,4CAAH,sDAUhB,OACE,8BACE,gCACE,kBAAC,EAAD,CACEkD,IAAMoI,IACNlI,IAAI,SACJ/D,KAAK,UACL8D,OAAO,oBAET,kBAAC,EAAD,wBACA,kBAAC,EAAD,CAAQlE,SAAS,SACjB,4BACE2D,cAAY,2BACZF,SAAW4J,GAEX,4BACE3J,MAAM,MACNC,cAAY,cAFd,OAMCuJ,EAAMrC,KAAI,SAACyC,GAAD,OACT,4BACEvC,IAAMuC,EAAKC,QACX5J,cAAA,UAAiB2J,EAAKC,QAAtB,WACA7J,MAAQ4J,EAAKC,SAEZD,EAAKC,aAIXrB,GAAU,kBAAC,EAAD,CAAsBF,QAAUA,EAAUhM,SAAS,UAEhE,kBAAC,EAAD,UCHS2E,gBAbS,SAACsH,GAAD,MAAY,CAClCC,OAAQD,EAAMD,QAAQE,OACtBC,aAAcF,EAAMD,QAAQG,aAC5BH,QAASC,EAAMD,QAAQA,QACvBrB,WAAYsB,EAAMD,QAAQrB,WAC1ByB,aAAcH,EAAMD,QAAQI,iBAGH,SAACrJ,GAAD,MAAe,CACxCiD,kBAAmB,SAAChG,GAAD,OAAc+C,EAASG,YAAWlD,KACrDqK,qBAAsB,SAACrK,GAAD,OAAc+C,EAASI,YAAcnD,QAG9C2E,EArDD,SAAC,GAGR,IAFLuH,EAEI,EAFJA,OAAQF,EAEJ,EAFIA,QAASG,EAEb,EAFaA,aAAcxB,EAE3B,EAF2BA,WAAY3E,EAEvC,EAFuCA,kBAAmBqE,EAE1D,EAF0DA,qBAC9D+B,EACI,EADJA,aAQA,OANApE,qBAAU,YACHoE,GAAgBJ,GAA8B,IAAnBA,EAAQ/L,SACtC+F,EAAkB,QAClBqE,EAAqB,WAEtB,CAACrE,EAAmBqE,EAAsB+B,EAAcJ,IAEzD,8BACE,gCACE,kBAAC,EAAD,CACE/H,IAAMoI,IACNlI,IAAI,SACJ/D,KAAK,UACL8D,OAAO,oBAET,kBAAC,EAAD,gBACA,kBAAC,EAAD,CAAQlE,SAAS,SAChBmM,GACE,kBAAC,EAAD,CAAmBxB,WAAaA,EAAa3F,YAAY,SAC3DkH,GAAU,kBAAC,EAAD,CAAsBF,QAAUA,EAAUhM,SAAS,UAEhE,kBAAC,EAAD,UChCOwN,GAAoB,SAACC,GAEhC,MADc,6BACDC,KAAKD,IAGPE,GAAuB,SAACC,GAAD,OAAcA,EAAS3N,OAP/B,GCgDb4N,GA9CD,WAAO,IAAD,EACQxJ,mBAAS,IADjB,mBACXoJ,EADW,KACJK,EADI,OAEczJ,mBAAS,IAFvB,mBAEXuJ,EAFW,KAEDG,EAFC,OAGc1J,oBAAS,GAHvB,mBAGXC,EAHW,KAGDC,EAHC,KAYlB,OAAID,EACK,kBAAC,IAAD,CAAUE,GAAG,aAIpB,8BACE,0BAAM2F,SAbW,SAACzD,GACpBA,EAAM0D,iBrBXRpD,aAAaM,QAAQ,aAAc,GACnCN,aAAaM,QAAQ,iBAAkB,GAGlC,SAAkBmG,GACvB,IAAMO,EAAO,CACXP,SAEFzG,aAAaM,QAAQ,OAAQR,KAAKS,UAAUyG,IqBK1CC,CAASR,GACTlJ,GAAY,KAUR,kBAAC,EAAD,CACEjB,YAAY,QACZE,KAAK,QACLlB,KAAK,OACLiB,OAAO,cACPG,MAAQ+J,EACRhK,SAAW,SAACyK,GAAD,OAAOJ,EAASI,EAAEvH,OAAOjD,UAEtC,kBAAC,EAAD,CACEJ,YAAY,WACZE,KAAK,WACLlB,KAAK,WACLiB,OAAO,iBACPG,MAAQkK,EACRnK,SAAW,SAACyK,GAAD,OAAOH,EAAYG,EAAEvH,OAAOjD,UAEzC,kBAAC,EAAD,CACEH,OAAO,mBACPO,WAAa0J,GAAkBC,IAAUE,GAAqBC,KAFhE,YCdOO,GAxBM,WAAO,IAAD,EACO9J,oBAAS,GADhB,mBAClBC,EADkB,KACRC,EADQ,KAGzB,OAAID,EAAiB,kBAAC,IAAD,CAAUE,GAAG,MAGhC,4BACEmB,MAAQ,CACNuC,KAAM,OAENE,OAAQ,MAEV9F,KAAK,SACLqB,cAAY,qBACZc,QAAU,WACRuC,aAAaoH,QACb7J,GAAY,KAVhB,SCiBW8J,GAvBU,WAAO,IAAD,EACGhK,oBAAS,GADZ,mBACtBC,EADsB,KACZC,EADY,KAG7B,OAAID,EAAiB,kBAAC,IAAD,CAAUE,GAAG,qBAGhC,4BACEmB,MAAQ,CACNuC,KAAM,OAENE,OAAQ,OAEV9F,KAAK,SACLqB,cAAY,mBACZc,QAAU,WACRF,GAAY,KAThB,oBCiBW+J,GAvBc,WAAO,IAAD,EACDjK,oBAAS,GADR,mBAC1BC,EAD0B,KAChBC,EADgB,KAGjC,OAAID,EAAiB,kBAAC,IAAD,CAAUE,GAAG,wBAGhC,4BACEmB,MAAQ,CACNuC,KAAM,OAENE,OAAQ,OAEV9F,KAAK,SACLqB,cAAY,uBACZc,QAAU,WACRF,GAAY,KAThB,uBCOWgK,GAXU,kBACvB,iCACE,wBAAI5K,cAAY,iBACbqD,aAAaC,QAAQ,SAExB,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QCUWuH,GAhBC,kBACd,6BACE,gCACE,kBAAC,EAAD,CACEvK,IAAMoI,IACNlI,IAAI,SACJ/D,KAAK,UACL8D,OAAO,oBAET,kBAAC,EAAD,gBAEF,kBAAC,GAAD,MACA,kBAAC,EAAD,Q,4DCoCWuK,GA5CQ,SAAC,GAAkD,IAAhDrJ,EAA+C,EAA/CA,GAAImE,EAA2C,EAA3CA,OAAQvE,EAAmC,EAAnCA,YAAa0J,EAAsB,EAAtBA,SAAUpJ,EAAY,EAAZA,MAAY,EACnCjB,oBAAS,GAD0B,mBAChEsK,EADgE,KACpDC,EADoD,KAGvE5G,qBAAU,WAEN4G,IADEF,G3BkID,SAAoCtJ,GACzC,IAAMyJ,EAAkBnH,IACxB,QAAImH,GACKA,EAAgBpG,MAAK,SAACc,GAAD,OAAYA,EAAOnE,KAAOA,K2BlItC0J,CAA2B1J,MAE1C,CAACA,EAAIsJ,IAgBR,OACE,2BACEpM,KAAK,QACL2B,IAAM0K,EAAaI,KAAiBC,KACpC7K,IAAI,QACJR,cAAc+K,EAAQ,UAAMpJ,EAAN,4BAAwC,eAC9Db,QApBmB,WACjBkK,G3BoHD,SAA8BxH,GACnC,IACM8H,EADkBvH,IACmBkB,QAAO,SAACW,GAAD,OAAYA,EAAOnE,KAAO+B,KAC5EH,aAAaM,QAAQ,kBAAmBR,KAAKS,UAAU0H,I2BtHnDC,CAAqB9J,GACrBwJ,GAAc,GACVF,GACW1F,SAASmG,eAAT,UAA2B7J,EAA3B,iBACR8J,Y3B4FN,SAA6B7F,EAAQvE,GAC1C,IAAMqK,EAAY,CAChBjK,GAAImE,EAAO,KAAD,OAAMvE,IAChB1C,KAAsB,SAAhB0C,EAAyB,SAAW,SAC1CsI,KAAM/D,EAAOgE,QAAUhE,EAAOgE,QAAU,GACxCvN,SAAUuJ,EAAOuB,YACjBwE,eAAgB/F,EAAOgG,aAAehG,EAAOgG,aAAe,GAC5D/L,KAAM+F,EAAO,MAAD,OAAOvE,IACnBwK,MAAOjG,EAAO,MAAD,OAAOvE,EAAP,WAEf,GAAK0C,IAEE,CACL,IAAMmH,EAAkBnH,IAClBuH,EAAkB,sBAAOJ,GAAP,CAAwBQ,IAChDrI,aAAaM,QAAQ,kBAAmBR,KAAKS,UAAU0H,SAJvDjI,aAAaM,QAAQ,kBAAmBR,KAAKS,UAAU,CAAC8H,K2BpGtDI,CAAoBlG,EAAQvE,GAC5B4J,GAAc,QCqCLc,GA9DQ,SAAC,GAAD,IAAGnG,EAAH,EAAGA,OAAQjE,EAAX,EAAWA,MAAOqJ,EAAlB,EAAkBA,WAAlB,OACrB,yBAAKvJ,GAAE,UAAME,EAAN,iBACL,kBAAC,IAAD,CAAMd,GAAE,WAAO+E,EAAOjH,KAAd,aAAuBiH,EAAOnE,KACpC,yBACEnB,IAAMsF,EAAOiG,MACbrL,IAAMoF,EAAO/F,KACboC,MAAM,QACNjC,cAAA,UAAiB2B,EAAjB,uBAEF,wBACE3B,cAAA,UAAiB2B,EAAjB,oBACAkE,eAAA,GAEED,EAAO/F,OAGb,uBACEG,cAAA,UAAiB2B,EAAjB,yBAEiB,WAAhBiE,EAAOjH,KAAoB,YAA3B,UAA4CiH,EAAO+D,KAAnD,cAA6D/D,EAAOvJ,YAErE2O,GACC,uBAAGhL,cAAA,UAAiB2B,EAAjB,0BAAkDiE,EAAOoG,UAC/D,2BACErN,KAAK,QACL2B,IAAM2L,KACNzL,IAAI,QACJM,QAAU,WACR,IAAM0B,EAAMwI,EACRzO,OAAOC,SAASC,KAAKyP,WAAWxJ,MAAM,uBAAuB,GAC7DnG,OAAOC,SAASC,KAAKyP,WAAWxJ,MAAM,oBAAoB,GACxDyJ,EAAM,UAAM3J,EAAN,YAAaoD,EAAOjH,KAApB,aAA6BiH,EAAOnE,IAChDlF,OAAO6P,UAAUC,UAAUC,UAAUH,GACrC,IAAMI,EAASlH,SAASmH,cAAc,KACtCD,EAAOE,UAAY,gBACnBF,EAAOG,UAAUC,IAAI,UACrBJ,EAAOvK,MAAM4F,QAAU,OACvBvC,SAASuH,KAAKC,YAAYN,IAE5BvM,cAAA,UAAiB2B,EAAjB,2BAEDqJ,GAAc,kBAAC,GAAD,CACbvJ,GAAKmE,EAAOnE,GACZJ,YAA8B,WAAhBuE,EAAOjH,KAAoB,OAAS,QAClDoM,SAAWC,EACXrJ,MAAQA,KAERqJ,GAAczF,MAAMC,KAAKI,EAAOkH,MAAM5F,KAAI,SAAC6F,EAAKhI,GAAN,OAC1C,uBACEqC,IAAMrC,EACN/E,cAAA,UAAiB2B,EAAjB,YAA0BoL,EAA1B,oBAECA,QCtCMC,GAhBa,SAAC,GAAD,IAAG3E,EAAH,EAAGA,QAAS2C,EAAZ,EAAYA,WAAZ,OAC1B,6BACG3C,GAAWA,EAAQnB,KAAI,SAACtB,EAAQjE,GAAT,OAAoB,kBAAC,GAAD,CAC1CyF,IAAMzF,EACNA,MAAQA,EACRiE,OAASA,EACToF,WAAaA,SCyCJiC,GA7CK,WAAO,IAAD,EACMvM,mBAAS,IADf,mBACjB2H,EADiB,KACR6E,EADQ,KAGxB,OACE,6BACE,gCACE,kBAAC,EAAD,CACE5M,IAAMoI,IACNlI,IAAI,SACJ/D,KAAK,UACL8D,OAAO,oBAET,kBAAC,EAAD,yBAEF,4BACE5B,KAAK,SACLqB,cAAY,oBACZc,QAAU,kBAAMoM,EAAWlJ,OAH7B,OAOA,4BACErF,KAAK,SACLqB,cAAY,qBACZc,QAAU,WACRoM,EAAWlJ,IAAiBiB,QAAO,SAACW,GAAD,MAA4B,WAAhBA,EAAOjH,WAJ1D,QASA,4BACEA,KAAK,SACLqB,cAAY,sBACZc,QAAU,WACRoM,EAAWlJ,IAAiBiB,QAAO,SAACW,GAAD,MAA4B,WAAhBA,EAAOjH,WAJ1D,SASE0J,EAAQ/L,OAAS,kBAAC,GAAD,CAAqB0O,YAAa,EAAQ3C,QAAUA,IACnE,kBAAC,GAAD,CAAqB2C,YAAa,EAAQ3C,QAAUrE,QCK/CmJ,GA7CU,WAAO,IAAD,EACCC,IAAM1M,SAAS,IADhB,mBACtB2H,EADsB,KACb6E,EADa,KAG7B,OACE,6BACE,gCACE,kBAAC,EAAD,CACE5M,IAAMoI,IACNlI,IAAI,SACJ/D,KAAK,UACL8D,OAAO,oBAET,kBAAC,EAAD,4BAEF,4BACE5B,KAAK,SACLqB,cAAY,oBACZc,QAAU,kBAAMoM,EAAWnJ,OAH7B,OAOA,4BACEpF,KAAK,SACLqB,cAAY,qBACZc,QAAU,WACRoM,EAAWnJ,IAAqBkB,QAAO,SAACW,GAAD,MAA4B,WAAhBA,EAAOjH,WAJ9D,QASA,4BACEA,KAAK,SACLqB,cAAY,sBACZc,QAAU,WACRoM,EAAWnJ,IAAqBkB,QAAO,SAACW,GAAD,MAA4B,WAAhBA,EAAOjH,WAJ9D,SASE0J,EAAQ/L,OAAS,kBAAC,GAAD,CAAqB+L,QAAUA,EAAU2C,YAAU,IAClE,kBAAC,GAAD,CAAqBA,YAAU,EAAC3C,QAAUtE,QCLrC/C,gBAJS,SAACsH,GAAD,MAAY,CAClCnI,SAAUmI,EAAM+E,OAAOlN,YAGVa,EAnCc,SAAC,GAAuC,IAArCb,EAAoC,EAApCA,SAAUyF,EAA0B,EAA1BA,OAAQvE,EAAkB,EAAlBA,YAAkB,EAClCX,oBAAS,GADyB,mBAC3DC,EAD2D,KACjDC,EADiD,KAGlE,OAAID,EAAiB,kBAAC,IAAD,CAAUE,GAAG,qBAGhC,4BACEmB,MAAQ,CACNuC,KAAM,OACNC,SAAU,QACVC,OAAQ,KAEVtE,SAAWA,EACXxB,KAAK,SACLqB,cAAY,oBACZc,QAAU,YhCwIT,SAAwB8E,EAAQvE,GACrC,IAAMqK,EAAY,CAChBjK,GAAImE,EAAO,KAAD,OAAMvE,IAChB1C,KAAsB,SAAhB0C,EAAyB,SAAW,SAC1CsI,KAAM/D,EAAOgE,QAAUhE,EAAOgE,QAAU,GACxCvN,SAAUuJ,EAAOuB,YACjBwE,eAAgB/F,EAAOgG,aAAehG,EAAOgG,aAAe,GAC5D/L,KAAM+F,EAAO,MAAD,OAAOvE,IACnBwK,MAAOjG,EAAO,MAAD,OAAOvE,EAAP,UACb2K,SAAU,YACVc,KAAMlH,EAAO0H,QAAU1H,EAAO0H,QAAQ5K,MAAM,KAAO,IAQrD,GAAKsB,IAEE,CACL,IAAMuJ,EAAcvJ,IACdwJ,EAAc,sBAAOD,GAAP,CAAoB7B,IACxCrI,aAAaM,QAAQ,cAAeR,KAAKS,UAAU4J,SAJnDnK,aAAaM,QAAQ,cAAeR,KAAKS,UAAU,CAAC8H,KgC1JhD+B,CAAe7H,EAAQvE,GACvBT,GAAY,KAXhB,wBCSW8M,GAlBK,kBAClB,2BACE/O,KAAK,QACL2B,IAAM2L,KACNzL,IAAI,QACJR,cAAY,YACZc,QAAU,WACRvE,OAAO6P,UAAUC,UAAUC,UAAU/P,OAAOC,SAASC,KAAKyP,WACvDxJ,MAAM,gBAAgB,IACzB,IAAM6J,EAASlH,SAASmH,cAAc,KACtCD,EAAOE,UAAY,gBACnBF,EAAOG,UAAUC,IAAI,UACrBJ,EAAOvK,MAAM4F,QAAU,OACvBvC,SAASuH,KAAKC,YAAYN,OCoFjBoB,GAvEO,SAAC,GAAqC,IAAnC/H,EAAkC,EAAlCA,OAAQvE,EAA0B,EAA1BA,YAAakG,EAAa,EAAbA,OACtCqG,EAAuB,WAG3B,IAFA,IACM1J,EAAc,GACXa,EAAI,EAAGA,GAFQ,GAEcA,GAAK,EACL,KAAhCa,EAAO,gBAAD,OAAiBb,KACxBa,EAAO,gBAAD,OAAiBb,KACxBb,EAAY2J,KAAKjI,EAAO,gBAAD,OAAiBb,KAG5C,OAAOb,GAgBT,OACE,iCACE,yBAAK5D,IAAMsF,EAAO,MAAD,OAAOvE,EAAP,UAA6Bb,IAAI,GAAGR,cAAY,iBACjE,wBAAIA,cAAY,gBAAgB4F,EAAO,MAAD,OAAOvE,KAC7C,kBAAC,GAAD,MACA,kBAAC,GAAD,CACEI,GAAKmE,EAAO,KAAD,OAAMvE,IACjBuE,OAASA,EACTvE,YAAcA,EACdM,MAAQ,IAEV,uBAAG3B,cAAY,mBACI,UAAhBqB,EACGuE,EAAOgG,aAAehG,EAAOuB,aAEnC,kBAAC,EAAD,CACEjD,YAAc0J,IACdtG,aA9BwB,WAG5B,IAFA,IACMA,EAAe,GACZvC,EAAI,EAAGA,GAFS,GAEcA,GAAK,EACT,KAA7Ba,EAAO,aAAD,OAAcb,KACQ,MAA7Ba,EAAO,aAAD,OAAcb,KACpBa,EAAO,aAAD,OAAcb,KACrBuC,EAAauG,KAAKjI,EAAO,aAAD,OAAcb,KAG1C,OAAOuC,EAoBYwG,GACfzM,YAAcA,EACdI,GAAKmE,EAAO,KAAD,OAAMvE,IACjBkG,OAASA,IAEX,uBAAGvH,cAAY,gBAAiB4F,EAAOmI,iBACvC,yBAAK/N,cAAY,SACd4F,EAAOoI,YAAc,kBAAC,EAAD,CAAcxL,IAAMoD,EAAOoI,cAEnD,kBAAC,EAAD,CACE3M,YAAcA,IAzEO,SAAC4M,EAAgB5M,EAAauE,EAAQ1B,GACjE,OAAQ+J,GACR,IAAK,OACH,OAAO,KACT,IAAK,aACH,OAAQ,kBAAC,EAAD,CACN5M,YAAcA,EACdmC,SAAWoC,EAAO,KAAD,OAAMvE,IACvB6C,YAAcA,IAElB,IAAK,OACH,OAAQ,kBAAC,GAAD,CACN7C,YAAcA,EACduE,OAASA,IAEb,QACE,OAAO,MA2DJsI,CAAqB3G,EAAQlG,EAAauE,EAAQgI,OCvD1CO,GAzBM,WAAO,IAAD,EACGzN,qBADH,mBAClBkF,EADkB,KACVwI,EADU,KAEjB3M,EAAO4M,cAAP5M,GAEF6M,EAAW,uCAAG,WAAO9K,GAAP,iBAAAzG,EAAA,sEACKG,MAAM,4DAAD,OAA6DsG,IADvE,cACZxG,EADY,gBAECA,EAASG,OAFV,OAEZF,EAFY,OAGlBmR,EAAUnR,EAAKI,OAAO,IAHJ,2CAAH,sDAUjB,OAJAgH,qBAAU,WACRiK,EAAY7M,KACX,CAACA,IAGF,yBAAKzB,cAAY,gBACd4F,GAAU,kBAAC,GAAD,CACTA,OAASA,EACTvE,YAAY,QACZkG,OAAO,iBCMAgH,GAzBK,WAAO,IAAD,EACI7N,qBADJ,mBACjBkF,EADiB,KACTwI,EADS,KAEhB3M,EAAO4M,cAAP5M,GAEF6M,EAAW,uCAAG,WAAO9K,GAAP,iBAAAzG,EAAA,sEACKG,MAAM,wDAAD,OAAyDsG,IADnE,cACZxG,EADY,gBAECA,EAASG,OAFV,OAEZF,EAFY,OAGlBmR,EAAUnR,EAAKG,MAAM,IAHH,2CAAH,sDAUjB,OAJAiH,qBAAU,WACRiK,EAAY7M,KACX,CAACA,IAGF,yBAAKzB,cAAY,eACd4F,GAAU,kBAAC,GAAD,CACTA,OAASA,EACTvE,YAAY,OACZkG,OAAO,iBCfAiH,GANE,kBACf,2CC0BaC,GAzBQ,WAAO,IAAD,EACC/N,qBADD,mBACpBkF,EADoB,KACZwI,EADY,KAEnB3M,EAAO4M,cAAP5M,GAEF6M,EAAW,uCAAG,WAAO9K,GAAP,iBAAAzG,EAAA,sEACKG,MAAM,wDAAD,OAAyDsG,IADnE,cACZxG,EADY,gBAECA,EAASG,OAFV,OAEZF,EAFY,OAGlBmR,EAAUnR,EAAKG,MAAM,IAHH,2CAAH,sDAUjB,OAJAiH,qBAAU,WACRiK,EAAY7M,KACX,CAACA,IAGF,6BACGmE,GAAU,kBAAC,GAAD,CACTA,OAASA,EACTvE,YAAY,OACZkG,OAAO,WCMAmH,GAzBS,WAAO,IAAD,EACAhO,qBADA,mBACrBkF,EADqB,KACbwI,EADa,KAEpB3M,EAAO4M,cAAP5M,GAEF6M,EAAW,uCAAG,WAAO9K,GAAP,iBAAAzG,EAAA,sEACKG,MAAM,4DAAD,OAA6DsG,IADvE,cACZxG,EADY,gBAECA,EAASG,OAFV,OAEZF,EAFY,OAGlBmR,EAAUnR,EAAKI,OAAO,IAHJ,2CAAH,sDAUjB,OAJAgH,qBAAU,WACRiK,EAAY7M,KACX,CAACA,IAGF,6BACGmE,GAAU,kBAAC,GAAD,CACTA,OAASA,EACTvE,YAAY,QACZkG,OAAO,WCgDAoH,OAhDf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAY5E,KAClC,kBAAC,IAAD,CAAO0E,OAAK,EAACC,KAAK,WAAWC,UAAYC,KACzC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,UAAYE,KACzC,kBAAC,IAAD,CACEJ,OAAK,EACLC,KAAK,eACLC,UAAYP,KAEd,kBAAC,IAAD,CACEK,OAAK,EACLC,KAAK,eACLC,UAAYX,KAEd,kBAAC,IAAD,CACES,OAAK,EACLC,KAAK,2BACLC,UAAYL,KAEd,kBAAC,IAAD,CACEG,OAAK,EACLC,KAAK,2BACLC,UAAYJ,KAEd,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,YAAYC,UAAYnG,KAC1C,kBAAC,IAAD,CAAOiG,OAAK,EAACC,KAAK,oBAAoBC,UAAY/F,KAClD,kBAAC,IAAD,CAAO6F,OAAK,EAACC,KAAK,oBAAoBC,UAAYlG,KAClD,kBAAC,IAAD,CACEgG,OAAK,EACLC,KAAK,iCACLC,UAAYG,KAEd,kBAAC,IAAD,CACEL,OAAK,EACLC,KAAK,iCACLC,UAAYI,KAEd,kBAAC,IAAD,CAAON,OAAK,EAACC,KAAK,yBAAyBC,UAAYK,KACvD,kBAAC,IAAD,CAAOP,OAAK,EAACC,KAAK,yBAAyBC,UAAYN,KACvD,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,UAAUC,UAAYjE,KACxC,kBAAC,IAAD,CAAO+D,OAAK,EAACC,KAAK,mBAAmBC,UAAY7B,KACjD,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,sBAAsBC,UAAY3B,OCtDtCiC,QACW,cAA7B7S,OAAOC,SAAS6S,UAEe,UAA7B9S,OAAOC,SAAS6S,UAEhB9S,OAAOC,SAAS6S,SAASC,MACvB,2D,+BChBAC,GAAgB,CACpB1S,OAAQ,GACRmJ,SAAU,IAoBGwJ,OAjBf,WAAuD,IAAhClH,EAA+B,uDAAvBiH,GAAeE,EAAQ,uCACpD,OAAQA,EAAO9Q,MACf,KAAKT,IACH,OAAO,2BACFoK,GADL,IAEEzL,OAAQ4S,EAAO5Q,UAEnB,KAAKV,IACH,OAAO,2BACFmK,GADL,IAEEtC,SAAUyJ,EAAO5Q,UAErB,QACE,OAAOyJ,ICZLiH,GAAgB,CACpBlH,QAAS,GACTrB,WAAY,GACZwB,cAAc,EACdD,QAAQ,EACRE,cAAc,GA6BDiH,GA1BO,WAAoC,IAAnCpH,EAAkC,uDAA1BiH,GAAeE,EAAW,uCACvD,OAAQA,EAAO9Q,MACf,KAAKP,IACH,OAAO,2BACFkK,GADL,IAEEC,QAAQ,IAEZ,KAAKlK,IACH,OAAO,2BAAKiK,GAAZ,IAAmBD,QAASoH,EAAO5Q,QAAS0J,QAAQ,IACtD,KAAKhK,IACH,OAAO,2BACF+J,GADL,IAEEE,cAAc,IAElB,KAAKlK,IACH,OAAO,2BAAKgK,GAAZ,IACEtB,WAAYyI,EAAO5Q,QACnB2J,cAAc,IAElB,KAAK/J,IACH,OAAO,2BAAK6J,GAAZ,IAAmBG,cAAeH,EAAMG,eAC1C,QACE,OAAOH,IClCLiH,GAAgB,CACpBpP,UAAU,GAeGuP,GAZO,WAAoC,IAAnCpH,EAAkC,uDAA1BiH,GAAeE,EAAW,uCACvD,OAAQA,EAAO9Q,MACf,KAAKH,IACH,OAAO,2BACF8J,GADL,IAEEnI,SAAUsP,EAAO5Q,UAErB,QACE,OAAOyJ,ICLIqH,GANKC,2BAAgB,CAClCJ,iBACAnH,QAASqH,GACTrC,OAAQwC,KCIKC,GAPDC,uBACZJ,GACAK,+BACEC,2BAAgBC,QCEpBC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUN,MAAQA,IAChB,kBAAC,GAAD,QAGJzK,SAASmG,eAAe,SNmHpB,kBAAmBY,WACrBA,UAAUiE,cAAcC,MAAMjR,MAAK,SAAAkR,GACjCA,EAAaC,iB,kBOrInBxS,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.7acf7374.chunk.js","sourcesContent":["const handleOneResult = (result, category) => {\n  if (result.length === 1) {\n    if (category === 'meal') {\n      window.location.href = `/comidas/${result[0].idMeal}`;\n    } else if (category === 'cocktail') {\n      window.location.href = `/bebidas/${result[0].idDrink}`;\n    }\n  }\n};\n\nexport const fetchFilterRecipes = async (option, word, category) => {\n  let response = '';\n  let data = '';\n  let result = '';\n  switch (option) {\n  case 'ingredients':\n    response = await fetch(`https://www.the${category}db.com/api/json/v1/1/filter.php?i=${word}`);\n    data = await response.json();\n    result = category === 'meal' ? data.meals : data.drinks;\n    handleOneResult(result, category);\n    return result;\n  case 'name':\n    response = await fetch(`https://www.the${category}db.com/api/json/v1/1/search.php?s=${word}`);\n    data = await response.json();\n    result = category === 'meal' ? data.meals : data.drinks;\n    handleOneResult(result, category);\n    return result;\n  case 'first-letter':\n    if (word.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n      break;\n    } else {\n      response = await fetch(`https://www.the${category}db.com/api/json/v1/1/search.php?f=${word}`);\n      data = await response.json();\n      result = category === 'meal' ? data.meals : data.drinks;\n      handleOneResult(result, category);\n      return result;\n    }\n  default:\n    return null;\n  }\n};\n\nexport const fetchRecipes = async (category) => {\n  let response = '';\n  let data = '';\n  switch (category) {\n  case 'meal':\n    response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n    data = await response.json();\n    return data.meals;\n  case 'drink':\n    response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n    data = await response.json();\n    return data.drinks;\n  default:\n    break;\n  }\n};\n\nexport const fetchCategories = async (category) => {\n  let response = '';\n  let data = '';\n  switch (category) {\n  case 'meal':\n    response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n    data = await response.json();\n    return data.meals;\n  case 'drink':\n    response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n    data = await response.json();\n    return data.drinks;\n  default:\n    break;\n  }\n};\n\nexport const fetchByCategory = async (category, foodOrMeal) => {\n  let response = '';\n  let data = '';\n  switch (foodOrMeal) {\n  case 'meal':\n    response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);\n    data = await response.json();\n    console.log(data);\n    return data.meals;\n  case 'drink':\n    response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`);\n    data = await response.json();\n    return data.drinks;\n  default:\n    break;\n  }\n};\n\nexport async function randomFood() {\n  const ENDPOINT = 'https://www.themealdb.com/api/json/v1/1/random.php';\n  const response = await fetch(ENDPOINT);\n  const data = await response.json();\n  return data.meals[0].idMeal;\n}\n\nexport async function randomDrink() {\n  const ENDPOINT = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n  const response = await fetch(ENDPOINT);\n  const data = await response.json();\n  return data.drinks[0].idDrink;\n}\n","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","import {\n  fetchByCategory,\n  fetchCategories,\n  fetchFilterRecipes,\n  fetchRecipes,\n} from '../../utils/fetch';\n\nconst errorMessage = 'Sinto muito, não encontramos nenhuma receita para esses filtros.';\n\nexport const SET_SEARCH_OPTION = 'SET_SEARCH_OPTION';\nexport const SET_WORD_SEARCHED = 'SET_WORD_SEARCHED';\nexport const REQUEST_RECIPES = 'REQUEST_RECIPES';\nexport const RECEIVE_RECIPES = 'RECEIVE_RECIPES';\nexport const RECEIVE_CATEGORIES = 'RECEIVE_CATEGORIES';\nexport const REQUEST_CATEGORIES = 'REQUEST_CATEGORIES';\nexport const SET_DISABLED = 'SET_DISABLED';\nexport const INGREDIENT = 'INGREDIENT';\n\nexport const setIsIngredient = () => ({\n  type: INGREDIENT,\n});\n\nexport const setSearchOption = (payload) => ({\n  type: SET_SEARCH_OPTION,\n  payload,\n});\n\nexport const setWordSearched = (payload) => ({\n  type: SET_WORD_SEARCHED,\n  payload,\n});\n\nconst requestRecipes = () => ({\n  type: REQUEST_RECIPES,\n});\n\nexport const receiveRecipes = (payload) => ({\n  type: RECEIVE_RECIPES,\n  payload,\n});\n\nconst requestCategories = () => ({\n  type: REQUEST_CATEGORIES,\n});\n\nexport const receiveCategories = (payload) => ({\n  type: RECEIVE_CATEGORIES,\n  payload,\n});\n\nexport const setDisabled = (payload) => ({\n  type: SET_DISABLED,\n  payload,\n});\n\nexport function getFilteredRecipes(option, wordSearched, category) {\n  return (dispatch) => {\n    dispatch(requestRecipes());\n    return fetchFilterRecipes(option, wordSearched, category)\n      .then((response) => dispatch(receiveRecipes(response)))\n      .catch(() => global.alert(errorMessage));\n  };\n}\n\nexport function getRecipes(category) {\n  return (dispatch) => {\n    dispatch(requestRecipes());\n    return fetchRecipes(category)\n      .then((response) => dispatch(receiveRecipes(response)))\n      .catch(() => global.alert('Sinto muito, não encontramos nenhuma receita.'));\n  };\n}\n\nexport function getCategories(category) {\n  return (dispatch) => {\n    dispatch(requestCategories());\n    return fetchCategories(category)\n      .then((response) => dispatch(receiveCategories(response)))\n      .catch(() => global.alert('Sinto muito, não encontramos nenhuma categoria.'));\n  };\n}\n\nexport function getRecipesByCategory(category, foodOrMeal) {\n  return (dispatch) => {\n    dispatch(requestRecipes());\n    return fetchByCategory(category, foodOrMeal)\n      .then((response) => dispatch(receiveRecipes(response)))\n      .catch(() => global.alert('Sinto muito, não encontramos nenhuma receita.'));\n  };\n}\n","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Input = ({ placeholder, testId, name, onChange, value, type }) => (<input\n  type={ type }\n  name={ name }\n  value={ value }\n  onChange={ onChange }\n  data-testid={ testId }\n  placeholder={ placeholder }\n/>);\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  testId: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Button = ({ children, testId, disabled }) => (\n  <button\n    type=\"submit\"\n    disabled={ disabled }\n    data-testid={ testId }\n  >\n    {children}\n  </button>\n);\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  testId: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst PageTitle = ({ children }) => (\n  <h1 data-testid=\"page-title\">\n    {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default PageTitle;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router';\n\nconst LinkButton = ({ src, testid, alt, href, handleClick }) => {\n  const [redirect, setRedirect] = useState(false);\n\n  if (redirect) return <Redirect to={ href } />;\n\n  return (\n    <input\n      type=\"image\"\n      src={ src }\n      alt={ alt }\n      data-testid={ testid }\n      onClick={ () => {\n        handleClick();\n        setRedirect(true);\n      } }\n    />\n  );\n};\n\nLinkButton.propTypes = {\n  alt: PropTypes.string.isRequired,\n  href: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n  testid: PropTypes.string.isRequired,\n  handleClick: PropTypes.func,\n};\n\nLinkButton.defaultProps = {\n  handleClick: () => {},\n};\n\nexport default LinkButton;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getRecipesByCategory, getRecipes } from '../../redux/actions';\n\nconst Category = ({\n  categoryName, foodOrDrink, fillRecipesByCategory, fillRecipes,\n}) => {\n  const [isActive, setIsActive] = useState(false);\n\n  const handleClick = () => {\n    setIsActive(!isActive);\n    if (isActive) {\n      fillRecipes(foodOrDrink);\n    } else {\n      fillRecipesByCategory(categoryName, foodOrDrink);\n    }\n  };\n  return (\n    <button\n      type=\"button\"\n      data-testid={ `${categoryName}-category-filter` }\n      id={ categoryName }\n      onClick={ handleClick }\n    >\n      {categoryName}\n    </button>\n  );\n};\nCategory.propTypes = {\n  categoryName: PropTypes.string.isRequired,\n  fillRecipes: PropTypes.func.isRequired,\n  fillRecipesByCategory: PropTypes.func.isRequired,\n  foodOrDrink: PropTypes.string.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fillRecipesByCategory: (c, f) => dispatch(getRecipesByCategory(c, f)),\n  fillRecipes: (foodOrDrink) => dispatch(getRecipes(foodOrDrink)),\n});\n\nexport default connect(null, mapDispatchToProps)(Category);\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Ingredient = ({ index, ingredient, measurement }) => (\n  <p\n    data-testid={ `${index}-ingredient-name-and-measure` }\n  >\n    {measurement ? `${ingredient} - ${measurement}` : ingredient}\n  </p>\n);\n\nIngredient.propTypes = {\n  index: PropTypes.number.isRequired,\n  ingredient: PropTypes.string.isRequired,\n  measurement: PropTypes.string.isRequired,\n};\n\nexport default Ingredient;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst RecommendationCard = ({ index, recommendation, foodOrDrink }) => {\n  console.log(recommendation);\n  return (\n    <div\n      style={ {\n        width: '300px',\n        height: '300px',\n        backgroundColor: 'purple',\n        marginRight: '200px',\n      } }\n      data-testid={ `${index}-recomendation-card` }\n    >\n      <h1 data-testid={ `${index}-recomendation-title` }>\n        {recommendation[`str${foodOrDrink}`]}\n      </h1>\n    </div>\n  );\n};\n\nRecommendationCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  recommendation: PropTypes.shape({\n    strDrink: PropTypes.string,\n    strMeal: PropTypes.string,\n  }).isRequired,\n  foodOrDrink: PropTypes.string.isRequired,\n};\n\nexport default RecommendationCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getRecipes } from '../../redux/actions';\n\nconst AllCategories = ({\n  foodOrDrink, fillListOfRecipes,\n}) => (\n  <button\n    type=\"button\"\n    data-testid=\"All-category-filter\"\n    onClick={ () => {\n      fillListOfRecipes(foodOrDrink);\n    } }\n  >\n    All\n  </button>\n);\n\nAllCategories.propTypes = {\n  fillListOfRecipes: PropTypes.func.isRequired,\n  foodOrDrink: PropTypes.string.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fillListOfRecipes: (category) => dispatch(getRecipes(category)),\n});\n\nexport default connect(null, mapDispatchToProps)(AllCategories);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport YouTube from 'react-youtube';\n\nconst YoutubeVideo = ({ url }) => {\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0,\n    },\n  };\n\n  const onReady = (event) => {\n    event.target.pauseVideo();\n  };\n\n  const generateVideoId = (urlVideo) => urlVideo.split('v=')[1];\n\n  return <YouTube videoId={ generateVideoId(url) } opts={ opts } onReady={ onReady } />;\n};\n\nYoutubeVideo.propTypes = {\n  url: PropTypes.string.isRequired,\n};\n\nexport default YoutubeVideo;\n","export function createTokens() {\n  localStorage.setItem('mealsToken', 1);\n  localStorage.setItem('cocktailsToken', 1);\n}\n\nexport function saveUser(email) {\n  const user = {\n    email,\n  };\n  localStorage.setItem('user', JSON.stringify(user));\n}\n\nexport function getRecipesInProgress() {\n  const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  return recipesInProgress;\n}\n\nexport function saveRecipeInProgress(foodOrDrink, recipeId, ingredient) {\n  if (foodOrDrink === 'Meal') {\n    if (!getRecipesInProgress()) {\n      const meals = {\n        [recipeId]: [ingredient],\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify({ meals }));\n    } else {\n      const inProgressRecipes = getRecipesInProgress();\n      const newProgressRecipes = {\n        ...inProgressRecipes,\n        meals: {\n          ...inProgressRecipes.meals,\n          [recipeId]: [...inProgressRecipes.meals[recipeId], ingredient],\n        },\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newProgressRecipes));\n    }\n  } else if (foodOrDrink === 'Drink') {\n    if (!getRecipesInProgress()) {\n      const cocktails = {\n        [recipeId]: [ingredient],\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify({ cocktails }));\n    } else {\n      const inProgressRecipes = getRecipesInProgress();\n      const newProgressRecipes = {\n        ...inProgressRecipes,\n        cocktails: {\n          ...inProgressRecipes.cocktails,\n          [recipeId]: [...inProgressRecipes.cocktails[recipeId], ingredient],\n        },\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newProgressRecipes));\n    }\n  }\n}\n\nexport const removeIngredientRecipeInProgress = (foodOrDrink, recipeId, ingredient) => {\n  if (foodOrDrink === 'Meal') {\n    const inProgressRecipes = getRecipesInProgress();\n    const newProgressRecipes = {\n      ...inProgressRecipes,\n      meals: {\n        ...inProgressRecipes.meals,\n        [recipeId]: inProgressRecipes.meals[recipeId].filter(\n          (ingredientInProgress) => ingredientInProgress !== ingredient,\n        ),\n      },\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newProgressRecipes));\n  }\n  if (foodOrDrink === 'Drink') {\n    const inProgressRecipes = getRecipesInProgress();\n    const newProgressRecipes = {\n      ...inProgressRecipes,\n      cocktails: {\n        ...inProgressRecipes.cocktails,\n        [recipeId]: inProgressRecipes.cocktails[recipeId].filter(\n          (ingredientInProgress) => ingredientInProgress !== ingredient,\n        ),\n      },\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newProgressRecipes));\n  }\n};\n\nexport function getIngredientsInProgress(foodOrDrink, recipeId) {\n  if (foodOrDrink === 'Meal') {\n    const inProgressRecipes = getRecipesInProgress();\n    if (inProgressRecipes && inProgressRecipes.meals) {\n      return inProgressRecipes.meals[recipeId];\n    }\n  }\n  if (foodOrDrink === 'Drink') {\n    const inProgressRecipes = getRecipesInProgress();\n    if (inProgressRecipes && inProgressRecipes.cocktails) {\n      return inProgressRecipes.cocktails[recipeId];\n    }\n  }\n  return [];\n}\n\nexport function getStatusOfRecipe(recipeId) {\n  const inProgressRecipes = getRecipesInProgress();\n  if (inProgressRecipes) {\n    if (inProgressRecipes.meals) {\n      return !!inProgressRecipes.meals[recipeId];\n    }\n    if (inProgressRecipes.cocktails) {\n      return !!inProgressRecipes.cocktails[recipeId];\n    }\n    return false;\n  }\n  return false;\n}\n\nexport function getFavoriteRecipes() {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  return favoriteRecipes;\n}\n\nexport function saveFavoriteRecipes(recipe, foodOrDrink) {\n  const newRecipe = {\n    id: recipe[`id${foodOrDrink}`],\n    type: foodOrDrink === 'Meal' ? 'comida' : 'bebida',\n    area: recipe.strArea ? recipe.strArea : '',\n    category: recipe.strCategory,\n    alcoholicOrNot: recipe.strAlcoholic ? recipe.strAlcoholic : '',\n    name: recipe[`str${foodOrDrink}`],\n    image: recipe[`str${foodOrDrink}Thumb`],\n  };\n  if (!getFavoriteRecipes()) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([newRecipe]));\n  } else {\n    const favoriteRecipes = getFavoriteRecipes();\n    const newFavoriteRecipes = [...favoriteRecipes, newRecipe];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n  }\n}\n\nexport function removeFavoriteRecipe(recipeId) {\n  const favoriteRecipes = getFavoriteRecipes();\n  const newFavoriteRecipes = favoriteRecipes.filter((recipe) => recipe.id !== recipeId);\n  localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n}\n\nexport function getFavoriteRecipeExistence(id) {\n  const favoriteRecipes = getFavoriteRecipes();\n  if (favoriteRecipes) {\n    return favoriteRecipes.some((recipe) => recipe.id === id);\n  }\n  return false;\n}\n\nexport function getDoneRecipes() {\n  const recipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  return recipes;\n}\n\nexport function saveDoneRecipe(recipe, foodOrDrink) {\n  const newRecipe = {\n    id: recipe[`id${foodOrDrink}`],\n    type: foodOrDrink === 'Meal' ? 'comida' : 'bebida',\n    area: recipe.strArea ? recipe.strArea : '',\n    category: recipe.strCategory,\n    alcoholicOrNot: recipe.strAlcoholic ? recipe.strAlcoholic : '',\n    name: recipe[`str${foodOrDrink}`],\n    image: recipe[`str${foodOrDrink}Thumb`],\n    doneDate: 'concluida',\n    tags: recipe.strTags ? recipe.strTags.split(',') : [],\n    // category: categoria - da - receita - ou - texto - vazio,\n    // alcoholicOrNot: alcoholic - ou - non - alcoholic - ou - texto - vazio,\n    // name: nome - da - receita,\n    // image: imagem - da - receita,\n    // doneDate: quando - a - receita - foi - concluida,\n    // tags: array - de - tags - da - receita - ou - array - vazio,\n  };\n  if (!getDoneRecipes()) {\n    localStorage.setItem('doneRecipes', JSON.stringify([newRecipe]));\n  } else {\n    const doneRecipes = getDoneRecipes();\n    const newDoneRecipes = [...doneRecipes, newRecipe];\n    localStorage.setItem('doneRecipes', JSON.stringify(newDoneRecipes));\n  }\n}\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router';\nimport { getStatusOfRecipe, saveRecipeInProgress } from '../../utils/localStorage';\n\nconst RecipeButtonStatus = ({ recipeId, foodOrDrink, ingredients }) => {\n  const [recipeStatus, setRecipeStatus] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    setRecipeStatus(getStatusOfRecipe(recipeId));\n  }, [recipeId]);\n\n  if (redirect) {\n    return foodOrDrink === 'Meal'\n      ? <Redirect to={ `/comidas/${recipeId}/in-progress` } />\n      : <Redirect to={ `/bebidas/${recipeId}/in-progress` } />;\n  }\n\n  return (\n    <div>\n      {recipeStatus ? (\n        <button\n          style={ {\n            with: '100%',\n            position: 'fixed',\n            bottom: '0',\n          } }\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n        >\n          Continuar Receita\n        </button>\n      )\n        : (\n          <button\n            style={ {\n              with: '100%',\n              position: 'fixed',\n              bottom: '0',\n            } }\n            type=\"button\"\n            data-testid=\"start-recipe-btn\"\n            onClick={ () => {\n              saveRecipeInProgress(foodOrDrink, recipeId, ingredients);\n              setRedirect(true);\n            } }\n          >\n            Iniciar\n          </button>\n        )}\n    </div>\n  );\n};\n\nRecipeButtonStatus.propTypes = {\n  foodOrDrink: PropTypes.string.isRequired,\n  ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n  recipeId: PropTypes.string.isRequired,\n};\n\nexport default RecipeButtonStatus;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setDisabled } from '../../redux/actions';\nimport {\n  saveRecipeInProgress, removeIngredientRecipeInProgress, getIngredientsInProgress,\n} from '../../utils/localStorage';\n\nconst getDisabled = () => {\n  const checkboxes = document.querySelectorAll('.ingredient-step');\n  const arrayCheckboxes = Array.from(checkboxes);\n  const disabled = arrayCheckboxes.some((checkbox) => checkbox.checked === false);\n  return disabled;\n};\n\nconst IngredientStep = ({\n  index, ingredient, measurement, foodOrDrink, id, setButtonFinished,\n}) => (\n  <label\n    data-testid={ `${index}-ingredient-step` }\n    htmlFor={ index }\n  >\n    <p\n      data-testid={ `${index}-ingredient-name-and-measure` }\n    >\n      {measurement ? `${ingredient} - ${measurement}` : ingredient}\n    </p>\n    <input\n      type=\"checkbox\"\n      id={ index }\n      className=\"ingredient-step\"\n      value={ ingredient }\n      defaultChecked={ getIngredientsInProgress(foodOrDrink, id)\n        .some((i) => ingredient === i) }\n      onChange={ ({ target: { checked } }) => {\n        if (checked) {\n          saveRecipeInProgress(foodOrDrink, id, ingredient);\n        } else {\n          removeIngredientRecipeInProgress(foodOrDrink, id, ingredient);\n        }\n        setButtonFinished(getDisabled());\n      } }\n    />\n  </label>\n);\n\nIngredientStep.propTypes = {\n  foodOrDrink: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  ingredient: PropTypes.string.isRequired,\n  measurement: PropTypes.string.isRequired,\n  setButtonFinished: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setButtonFinished: (disabled) => dispatch(setDisabled(disabled)),\n});\n\nexport default connect(null, mapDispatchToProps)(IngredientStep);\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router';\n\nconst RecipeCard = ({ index, recipe, category }) => {\n  const [redirect, setRedirect] = useState(false);\n\n  if (redirect) {\n    if (category === 'Meal') {\n      return <Redirect to={ `/comidas/${recipe.idMeal}` } />;\n    }\n    return <Redirect to={ `/bebidas/${recipe.idDrink}` } />;\n  }\n\n  return (\n    <div\n      onClick={ () => setRedirect(true) }\n      data-testid={ `${index}-recipe-card` }\n      aria-hidden\n    >\n      <img\n        data-testid={ `${index}-card-img` }\n        src={ recipe[`str${category}Thumb`] }\n        alt={ recipe[`str${category}`] }\n      />\n      <h3 data-testid={ `${index}-card-name` }>{ recipe[`str${category}`] }</h3>\n    </div>\n  );\n};\n\nRecipeCard.propTypes = {\n  category: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  recipe: PropTypes.shape({\n    idMeal: PropTypes.string,\n    idDrink: PropTypes.string,\n    strMeal: PropTypes.string,\n    strDrink: PropTypes.string,\n    strMealThumb: PropTypes.string,\n    strDrinkThumb: PropTypes.string,\n  }).isRequired,\n};\n\nexport default RecipeCard;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  setSearchOption,\n  setWordSearched,\n  getFilteredRecipes,\n} from '../../redux/actions';\n\nconst SearchBar = ({ setOption, setWord, fetchReceitas, category }) => {\n  const [radioOption, setRadioOption] = useState('ingredients');\n  const [wordToSearch, setWordToSearch] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setOption(radioOption);\n    setWord(wordToSearch);\n    fetchReceitas(radioOption, wordToSearch, category);\n  };\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <input\n        type=\"text\"\n        data-testid=\"search-input\"\n        value={ wordToSearch }\n        onChange={ (event) => setWordToSearch(event.target.value) }\n      />\n      <button\n        type=\"submit\"\n        data-testid=\"exec-search-btn\"\n      >\n        Pesquisar\n      </button>\n      <div>\n        <label htmlFor=\"ingredients\">\n          Ingrediente\n          <input\n            type=\"radio\"\n            name=\"option\"\n            data-testid=\"ingredient-search-radio\"\n            id=\"ingredients\"\n            value=\"ingredients\"\n            onChange={ (event) => setRadioOption(event.target.value) }\n          />\n        </label>\n        <label htmlFor=\"name\">\n          Nome\n          <input\n            type=\"radio\"\n            name=\"option\"\n            data-testid=\"name-search-radio\"\n            id=\"name\"\n            value=\"name\"\n            onChange={ (event) => setRadioOption(event.target.value) }\n          />\n        </label>\n        <label htmlFor=\"first-letter\">\n          Primeira Letra\n          <input\n            type=\"radio\"\n            name=\"option\"\n            data-testid=\"first-letter-search-radio\"\n            id=\"first-letter\"\n            value=\"first-letter\"\n            onChange={ (event) => setRadioOption(event.target.value) }\n          />\n        </label>\n      </div>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  category: PropTypes.string.isRequired,\n  fetchReceitas: PropTypes.func.isRequired,\n  setOption: PropTypes.func.isRequired,\n  setWord: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setOption: (option) => dispatch(setSearchOption(option)),\n  setWord: (searched) => dispatch(setWordSearched(searched)),\n  fetchReceitas: (o, w, c) => dispatch(getFilteredRecipes(o, w, c)),\n});\n\nexport default connect(null, mapDispatchToProps)(SearchBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LinkButton from '../atoms/LinkButton';\nimport drinkIcon from '../../images/drinkIcon.svg';\nimport exploreIcon from '../../images/exploreIcon.svg';\nimport mealIcon from '../../images/mealIcon.svg';\nimport { getCategories, getRecipes, setIsIngredient } from '../../redux/actions';\n\nconst Footer = ({ fillListOfRecipes, fillListOfCategories, setIsIngredientFalse }) => (\n  <footer data-testid=\"footer\" style={ { position: 'fixed', bottom: '0' } }>\n    <LinkButton\n      src={ drinkIcon }\n      alt=\"drink\"\n      href=\"/bebidas\"\n      testid=\"drinks-bottom-btn\"\n    />\n    <LinkButton\n      src={ exploreIcon }\n      alt=\"explore\"\n      href=\"/explorar\"\n      testid=\"explore-bottom-btn\"\n    />\n    <LinkButton\n      src={ mealIcon }\n      alt=\"meal\"\n      href=\"/comidas\"\n      testid=\"food-bottom-btn\"\n      handleClick={ () => {\n        fillListOfRecipes('meal');\n        fillListOfCategories('meal');\n        setIsIngredientFalse();\n      } }\n    />\n  </footer>\n);\n\nFooter.propTypes = {\n  fillListOfRecipes: PropTypes.func.isRequired,\n  fillListOfCategories: PropTypes.func.isRequired,\n  setIsIngredientFalse: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fillListOfRecipes: (category) => dispatch(getRecipes(category)),\n  fillListOfCategories: (category) => dispatch(getCategories(category)),\n  setIsIngredientFalse: () => dispatch(setIsIngredient()),\n});\n\nexport default connect(null, mapDispatchToProps)(Footer);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { AllCategories } from '../atoms';\nimport Category from '../atoms/Category';\n\nconst MAX_CATEGORIES = 5;\n\nconst CategoryContainer = ({ categories, foodOrDrink }) => (\n  <div>\n    {categories && <AllCategories foodOrDrink={ foodOrDrink } />}\n    {categories && categories.slice(0, MAX_CATEGORIES).map(({ strCategory }) => (<Category\n      key={ strCategory }\n      categoryName={ strCategory }\n      foodOrDrink={ foodOrDrink }\n    />))}\n  </div>\n);\n\nCategoryContainer.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  foodOrDrink: PropTypes.string.isRequired,\n};\n\nexport default CategoryContainer;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Ingredient } from '../atoms';\nimport IngredientStep from '../atoms/IngredientStep';\n\nconst IngredientsContainer = ({ ingredients, measurements, status, foodOrDrink, id }) => (\n  <div>\n    {ingredients && (\n      status === 'inProgress' ? (ingredients.map((ingredient, index) => (<Ingredient\n        key={ index }\n        index={ index }\n        ingredient={ ingredient }\n        measurement={ measurements[index] }\n      />))) : (ingredients.map((ingredient, index) => (<IngredientStep\n        key={ index }\n        index={ index }\n        ingredient={ ingredient }\n        measurement={ measurements[index] }\n        foodOrDrink={ foodOrDrink }\n        id={ id }\n      />)))\n    )}\n  </div>\n);\n\nIngredientsContainer.propTypes = {\n  foodOrDrink: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n  measurements: PropTypes.arrayOf(PropTypes.string).isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nexport default IngredientsContainer;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { RecommendationCard } from '../atoms';\n\nconst MAX = 6;\n\nconst RecommendationContainer = ({ foodOrDrink }) => {\n  const [recommendations, setRecommendations] = useState([]);\n\n  const fetchRecommendations = async (category) => {\n    if (category === 'Meal') {\n      const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n      const data = await response.json();\n      setRecommendations(data.drinks);\n    } else {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      const data = await response.json();\n      setRecommendations(data.meals);\n    }\n  };\n\n  useEffect(() => {\n    fetchRecommendations(foodOrDrink);\n  }, [foodOrDrink]);\n\n  return (\n    <div\n      style={ {\n        display: 'flex',\n        height: '100px',\n        overflowX: 'scroll',\n        overflowY: 'hidden',\n        whiteSpace: 'nowrap',\n      } }\n    >\n      {recommendations\n    && recommendations.slice(0, MAX).map((recommendation, index) => (<RecommendationCard\n      key={ index }\n      index={ index }\n      foodOrDrink={ foodOrDrink === 'Meal' ? 'Drink' : 'Meal' }\n      recommendation={ recommendation }\n    />))}\n    </div>\n  );\n};\n\nRecommendationContainer.propTypes = {\n  foodOrDrink: PropTypes.string.isRequired,\n};\n\nexport default RecommendationContainer;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport searchIcon from '../../images/searchIcon.svg';\nimport { SearchBar } from '../molecules';\n\nconst Search = ({ category }) => {\n  const [showSearchBar, setShowSearchBar] = useState(false);\n\n  return (\n    <div>\n      <input\n        type=\"image\"\n        src={ searchIcon }\n        alt=\"perfil\"\n        data-testid=\"search-top-btn\"\n        onClick={ () => setShowSearchBar(!showSearchBar) }\n      />\n      {showSearchBar && <SearchBar category={ category } />}\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n\nexport default Search;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { RecipeCard } from '../molecules';\n\nconst MAX_RECIPES = 12;\n\nconst RecipeCardsContainer = ({ recipes, category }) => (\n  <div>\n    {recipes && recipes.map((recipe, index) => (index !== MAX_RECIPES && <RecipeCard\n      key={ index }\n      index={ index }\n      category={ category }\n      recipe={ recipe }\n    />))}\n  </div>\n);\n\nRecipeCardsContainer.propTypes = {\n  category: PropTypes.string.isRequired,\n  recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default RecipeCardsContainer;\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { PageTitle, LinkButton } from '../../atoms';\nimport { Search, RecipeCardsContainer } from '../../organisms';\nimport { getRecipes, getCategories } from '../../../redux/actions';\nimport profileIcon from '../../../images/profileIcon.svg';\nimport { Footer } from '../../molecules';\nimport CategoryContainer from '../../molecules/CategoryContainer';\n\nconst Drinks = ({\n  recipes, categories, loaded, buttonLoaded, fillListOfRecipes, fillListOfCategories,\n  isIngredient,\n}) => {\n  useEffect(() => {\n    if (!isIngredient && recipes && recipes.length === 0) {\n      fillListOfRecipes('drink');\n      fillListOfCategories('drink');\n    }\n  }, [fillListOfRecipes, fillListOfCategories, isIngredient, recipes]);\n  return (\n    <div>\n      <header>\n        <LinkButton\n          src={ profileIcon }\n          alt=\"perfil\"\n          href=\"/perfil\"\n          testid=\"profile-top-btn\"\n        />\n        <PageTitle>Bebidas</PageTitle>\n        <Search category=\"cocktail\" />\n        {buttonLoaded\n        && <CategoryContainer categories={ categories } foodOrDrink=\"drink\" />}\n        {loaded && <RecipeCardsContainer recipes={ recipes } category=\"Drink\" />}\n      </header>\n      <Footer />\n    </div>\n  );\n};\n\nDrinks.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loaded: PropTypes.bool.isRequired,\n  buttonLoaded: PropTypes.bool.isRequired,\n  recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\n  fillListOfRecipes: PropTypes.func.isRequired,\n  fillListOfCategories: PropTypes.func.isRequired,\n  isIngredient: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loaded: state.recipes.loaded,\n  buttonLoaded: state.recipes.buttonLoaded,\n  recipes: state.recipes.recipes,\n  categories: state.recipes.categories,\n  isIngredient: state.recipes.isIngredient,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fillListOfRecipes: (category) => dispatch(getRecipes(category)),\n  fillListOfCategories: (category) => dispatch(getCategories(category)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Drinks);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { PageTitle, LinkButton } from '../../atoms';\nimport profileIcon from '../../../images/profileIcon.svg';\nimport { Footer } from '../../molecules';\n\nconst Explore = () => (\n  <div>\n    <header>\n      <LinkButton\n        src={ profileIcon }\n        alt=\"perfil\"\n        href=\"/perfil\"\n        testid=\"profile-top-btn\"\n      />\n      <PageTitle>Explorar</PageTitle>\n      <Link to=\"/explorar/comidas\">\n        <button type=\"button\" data-testid=\"explore-food\">\n          Explorar Comidas\n        </button>\n      </Link>\n      <Link to=\"/explorar/bebidas\">\n        <button type=\"button\" data-testid=\"explore-drinks\">Explorar Bebidas</button>\n      </Link>\n    </header>\n    <Footer />\n  </div>\n);\n\nexport default Explore;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { PageTitle, LinkButton } from '../../atoms';\nimport profileIcon from '../../../images/profileIcon.svg';\nimport { Footer } from '../../molecules';\nimport { randomDrink } from '../../../utils/fetch';\n\nconst ExploreDrinks = () => {\n  const [redirect, setRedirect] = useState(false);\n  const [redirectId, setRedirectId] = useState('');\n\n  if (redirect) {\n    return <Redirect to={ `/bebidas/${redirectId}` } />;\n  }\n\n  return (\n    <div>\n      <header>\n        <LinkButton\n          src={ profileIcon }\n          alt=\"perfil\"\n          href=\"/perfil\"\n          testid=\"profile-top-btn\"\n        />\n        <PageTitle>Explorar Bebidas</PageTitle>\n        <Link to=\"/explorar/bebidas/ingredientes\">\n          <button type=\"button\" data-testid=\"explore-by-ingredient\">\n            Por Ingredientes\n          </button>\n        </Link>\n        <button\n          type=\"button\"\n          data-testid=\"explore-surprise\"\n          onClick={ async () => {\n            setRedirectId(await randomDrink());\n            setRedirect(true);\n          } }\n        >\n          Me Surpreenda!\n        </button>\n      </header>\n      <Footer />\n    </div>\n  );\n};\n\nexport default ExploreDrinks;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { PageTitle, LinkButton } from '../../atoms';\nimport profileIcon from '../../../images/profileIcon.svg';\nimport { Footer } from '../../molecules';\nimport { randomFood } from '../../../utils/fetch';\n\nconst ExploreFoods = () => {\n  const [redirect, setRedirect] = useState(false);\n  const [redirectId, setRedirectId] = useState('');\n\n  if (redirect) {\n    return <Redirect to={ `/comidas/${redirectId}` } />;\n  }\n\n  return (\n    <div>\n      <header>\n        <LinkButton\n          src={ profileIcon }\n          alt=\"perfil\"\n          href=\"/perfil\"\n          testid=\"profile-top-btn\"\n        />\n        <PageTitle>Explorar Comidas</PageTitle>\n        <Link\n          to=\"/explorar/comidas/ingredientes\"\n        >\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-ingredient\"\n          >\n            Por Ingredientes\n          </button>\n        </Link>\n        <Link\n          to=\"/explorar/comidas/area\"\n        >\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-area\"\n          >\n            Por Local de Origem\n\n          </button>\n        </Link>\n        <button\n          type=\"button\"\n          data-testid=\"explore-surprise\"\n          onClick={ async () => {\n            setRedirectId(await randomFood());\n            setRedirect(true);\n          } }\n        >\n          Me Surpreenda!\n        </button>\n      </header>\n      <Footer />\n    </div>\n  );\n};\n\nexport default ExploreFoods;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { receiveRecipes, setIsIngredient } from '../../redux/actions';\n\nconst MAX = 12;\n\nconst CardsIngredientsContainer = ({ ingredients, saveRecipes, isIngredient }) => {\n  const handleRecipes = async (ingredient) => {\n    const urlIngredient = ingredient.strIngredient\n      ? ingredient.strIngredient : ingredient.strIngredient1;\n    const url = ingredient.strIngredient\n      ? `https://www.themealdb.com/api/json/v1/1/filter.php?i=${urlIngredient}`\n      : `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${urlIngredient}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    const recipes = data.meals ? data.meals : data.drinks;\n    isIngredient();\n    saveRecipes(recipes);\n  };\n\n  return (\n    <section>\n      {ingredients.slice(0, MAX).map((ingredient, index) => (\n        <Link\n          key={ index }\n          to={ ingredient.strIngredient\n            ? '/comidas' : '/bebidas' }\n          onClick={ () => handleRecipes(ingredient) }\n        >\n          <div\n            data-testid={ `${index}-ingredient-card` }\n            aria-hidden\n          >\n            <img\n              src={ `https://www.the${ingredient.strIngredient\n                ? 'meal'\n                : 'cocktail'}db.com/images/ingredients/${ingredient.strIngredient\n                ? ingredient.strIngredient\n                : ingredient.strIngredient1}-Small.png` }\n              alt=\"massa\"\n              data-testid={ `${index}-card-img` }\n            />\n            <p data-testid={ `${index}-card-name` }>\n              {ingredient.strIngredient\n                ? ingredient.strIngredient\n                : ingredient.strIngredient1}\n            </p>\n          </div>\n        </Link>\n      ))}\n    </section>\n  );\n};\n\nCardsIngredientsContainer.propTypes = {\n  ingredients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  saveRecipes: PropTypes.func.isRequired,\n  isIngredient: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveRecipes: (recipes) => dispatch(receiveRecipes(recipes)),\n  isIngredient: () => dispatch(setIsIngredient()),\n});\n\nexport default connect(null, mapDispatchToProps)(CardsIngredientsContainer);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { receiveRecipes } from '../../../redux/actions';\nimport { PageTitle, LinkButton } from '../../atoms';\nimport profileIcon from '../../../images/profileIcon.svg';\nimport { Footer } from '../../molecules';\nimport CardsIngredientsContainer from '../../molecules/CardsIngredientsContainer';\n\nconst ExploreFoodIngredients = ({ fillRecipes }) => {\n  const [ingredients, setIngredients] = useState([]);\n\n  const getIngredients = async () => {\n    const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list');\n    const data = await response.json();\n    setIngredients(data.meals);\n  };\n\n  useEffect(() => {\n    getIngredients();\n    fillRecipes();\n  }, [fillRecipes]);\n\n  return (\n    <div>\n      <header>\n        <LinkButton\n          src={ profileIcon }\n          alt=\"perfil\"\n          href=\"/perfil\"\n          testid=\"profile-top-btn\"\n        />\n        <PageTitle>Explorar Ingredientes</PageTitle>\n      </header>\n      <CardsIngredientsContainer ingredients={ ingredients } />\n      <Footer />\n    </div>\n  );\n};\n\nExploreFoodIngredients.propTypes = {\n  fillRecipes: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fillRecipes: () => dispatch(receiveRecipes([1])),\n});\n\nexport default connect(null, mapDispatchToProps)(ExploreFoodIngredients);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { receiveRecipes } from '../../../redux/actions';\nimport { PageTitle, LinkButton } from '../../atoms';\nimport profileIcon from '../../../images/profileIcon.svg';\nimport { Footer } from '../../molecules';\nimport CardsIngredientsContainer from '../../molecules/CardsIngredientsContainer';\n\nconst ExploreDrinkIngredients = ({ fillRecipes }) => {\n  const [ingredients, setIngredients] = useState([]);\n\n  const getIngredients = async () => {\n    const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list');\n    const data = await response.json();\n    setIngredients(data.drinks);\n  };\n\n  useEffect(() => {\n    getIngredients();\n    fillRecipes();\n  }, [fillRecipes]);\n\n  return (\n    <div>\n      <header>\n        <LinkButton\n          src={ profileIcon }\n          alt=\"perfil\"\n          href=\"/perfil\"\n          testid=\"profile-top-btn\"\n        />\n        <PageTitle>Explorar Ingredientes</PageTitle>\n      </header>\n      <CardsIngredientsContainer ingredients={ ingredients } />\n      <Footer />\n    </div>\n  );\n};\n\nExploreDrinkIngredients.propTypes = {\n  fillRecipes: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fillRecipes: () => dispatch(receiveRecipes([1])),\n});\n\nexport default connect(null, mapDispatchToProps)(ExploreDrinkIngredients);\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getRecipes, getCategories, receiveRecipes } from '../../../redux/actions';\nimport { PageTitle, LinkButton } from '../../atoms';\nimport { Search, RecipeCardsContainer } from '../../organisms';\nimport { Footer } from '../../molecules';\nimport profileIcon from '../../../images/profileIcon.svg';\n\nconst ExploreOrigin = ({\n  loaded, recipes, fillListOfRecipes, fillListOfCategories, fillRecipes,\n}) => {\n  const [areas, setAreas] = useState([]);\n\n  const getAreas = async () => {\n    const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list');\n    const data = await response.json();\n    setAreas(data.meals);\n  };\n\n  useEffect(() => {\n    getAreas();\n    fillListOfRecipes('meal');\n    fillListOfCategories('meal');\n  }, [fillListOfCategories, fillListOfRecipes]);\n\n  const handleArea = async ({ target: { value } }) => {\n    if (value === 'all') {\n      fillListOfRecipes('meal');\n    } else {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${value}`);\n      const data = await response.json();\n      fillRecipes(data.meals);\n    }\n  };\n\n  return (\n    <main>\n      <header>\n        <LinkButton\n          src={ profileIcon }\n          alt=\"perfil\"\n          href=\"/perfil\"\n          testid=\"profile-top-btn\"\n        />\n        <PageTitle>Explorar Origem</PageTitle>\n        <Search category=\"meal\" />\n        <select\n          data-testid=\"explore-by-area-dropdown\"\n          onChange={ handleArea }\n        >\n          <option\n            value=\"all\"\n            data-testid=\"All-option\"\n          >\n            All\n          </option>\n          {areas.map((area) => (\n            <option\n              key={ area.strArea }\n              data-testid={ `${area.strArea}-option` }\n              value={ area.strArea }\n            >\n              {area.strArea}\n            </option>\n          ))}\n        </select>\n        {loaded && <RecipeCardsContainer recipes={ recipes } category=\"Meal\" />}\n      </header>\n      <Footer />\n    </main>\n  );\n};\n\nExploreOrigin.propTypes = {\n  loaded: PropTypes.bool.isRequired,\n  recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\n  fillListOfCategories: PropTypes.func.isRequired,\n  fillListOfRecipes: PropTypes.func.isRequired,\n  fillRecipes: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loaded: state.recipes.loaded,\n  buttonLoaded: state.recipes.buttonLoaded,\n  recipes: state.recipes.recipes,\n  categories: state.recipes.categories,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fillListOfRecipes: (category) => dispatch(getRecipes(category)),\n  fillListOfCategories: (category) => dispatch(getCategories(category)),\n  fillRecipes: (recipes) => dispatch(receiveRecipes(recipes)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreOrigin);\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { PageTitle, LinkButton } from '../../atoms';\nimport {\n  getRecipes,\n  getCategories,\n} from '../../../redux/actions';\nimport { Search, RecipeCardsContainer } from '../../organisms';\nimport { Footer } from '../../molecules';\nimport profileIcon from '../../../images/profileIcon.svg';\nimport CategoryContainer from '../../molecules/CategoryContainer';\n\nconst Foods = ({\n  loaded, recipes, buttonLoaded, categories, fillListOfRecipes, fillListOfCategories,\n  isIngredient,\n}) => {\n  useEffect(() => {\n    if (!isIngredient && recipes && recipes.length === 0) {\n      fillListOfRecipes('meal');\n      fillListOfCategories('meal');\n    }\n  }, [fillListOfRecipes, fillListOfCategories, isIngredient, recipes]);\n  return (\n    <main>\n      <header>\n        <LinkButton\n          src={ profileIcon }\n          alt=\"perfil\"\n          href=\"/perfil\"\n          testid=\"profile-top-btn\"\n        />\n        <PageTitle>Comidas</PageTitle>\n        <Search category=\"meal\" />\n        {buttonLoaded\n        && <CategoryContainer categories={ categories } foodOrDrink=\"meal\" />}\n        {loaded && <RecipeCardsContainer recipes={ recipes } category=\"Meal\" />}\n      </header>\n      <Footer />\n    </main>\n  );\n};\n\nFoods.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loaded: PropTypes.bool.isRequired,\n  buttonLoaded: PropTypes.bool.isRequired,\n  recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\n  fillListOfRecipes: PropTypes.func.isRequired,\n  fillListOfCategories: PropTypes.func.isRequired,\n  isIngredient: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loaded: state.recipes.loaded,\n  buttonLoaded: state.recipes.buttonLoaded,\n  recipes: state.recipes.recipes,\n  categories: state.recipes.categories,\n  isIngredient: state.recipes.isIngredient,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fillListOfRecipes: (category) => dispatch(getRecipes(category)),\n  fillListOfCategories: (category) => dispatch(getCategories(category)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Foods);\n","// Referência para o Regex e função teste\n// https://www.horadecodar.com.br/2020/09/07/expressao-regular-para-validar-e-mail-javascript-regex/\n// https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\n\nconst MIN_PASSWORD_LENGTH = 6;\n\nexport const emailVerification = (email) => {\n  const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return regex.test(email);\n};\n\nexport const passwordVerification = (password) => password.length > MIN_PASSWORD_LENGTH;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router';\nimport { Input, Button } from '../atoms';\nimport { emailVerification, passwordVerification } from '../../utils/verify';\nimport { createTokens, saveUser } from '../../utils/localStorage';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createTokens();\n    saveUser(email);\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/comidas\" />;\n  }\n\n  return (\n    <main>\n      <form onSubmit={ handleSubmit }>\n        <Input\n          placeholder=\"Email\"\n          name=\"email\"\n          type=\"text\"\n          testId=\"email-input\"\n          value={ email }\n          onChange={ (e) => setEmail(e.target.value) }\n        />\n        <Input\n          placeholder=\"Password\"\n          name=\"password\"\n          type=\"password\"\n          testId=\"password-input\"\n          value={ password }\n          onChange={ (e) => setPassword(e.target.value) }\n        />\n        <Button\n          testId=\"login-submit-btn\"\n          disabled={ !(emailVerification(email) && passwordVerification(password)) }\n        >\n          Login\n        </Button>\n      </form>\n    </main>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router';\n\nconst LogoutButton = () => {\n  const [redirect, setRedirect] = useState(false);\n\n  if (redirect) return <Redirect to=\"/\" />;\n\n  return (\n    <button\n      style={ {\n        with: '100%',\n        // position: 'fixed', comenti pois ta bugando o teste\n        bottom: '50',\n      } }\n      type=\"button\"\n      data-testid=\"profile-logout-btn\"\n      onClick={ () => {\n        localStorage.clear();\n        setRedirect(true);\n      } }\n    >\n      Sair\n    </button>\n  );\n};\n\nexport default LogoutButton;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router';\n\nconst RecipeDoneButton = () => {\n  const [redirect, setRedirect] = useState(false);\n\n  if (redirect) return <Redirect to=\"/receitas-feitas\" />;\n\n  return (\n    <button\n      style={ {\n        with: '100%',\n        // position: 'fixed', comentei pois ta bugando o teste\n        bottom: '200',\n      } }\n      type=\"button\"\n      data-testid=\"profile-done-btn\"\n      onClick={ () => {\n        setRedirect(true);\n      } }\n    >\n      Receitas Feitas\n    </button>\n  );\n};\n\nexport default RecipeDoneButton;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router';\n\nconst RecipeFavoriteButton = () => {\n  const [redirect, setRedirect] = useState(false);\n\n  if (redirect) return <Redirect to=\"/receitas-favoritas\" />;\n\n  return (\n    <button\n      style={ {\n        with: '100%',\n        // position: 'fixed', comentei poista bugando o teste\n        bottom: '100',\n      } }\n      type=\"button\"\n      data-testid=\"profile-favorite-btn\"\n      onClick={ () => {\n        setRedirect(true);\n      } }\n    >\n      Receitas Favoritas\n    </button>\n  );\n};\n\nexport default RecipeFavoriteButton;\n","import React from 'react';\nimport LogoutButton from '../atoms/LogoutButton';\nimport RecipeDoneButton from '../atoms/RecipeDoneButton';\nimport RecipeFavoriteButton from '../atoms/RecipeFavoriteButton';\n\nconst ProfileContainer = () => (\n  <section>\n    <h1 data-testid=\"profile-email\">\n      {localStorage.getItem('user')}\n    </h1>\n    <RecipeDoneButton />\n    <RecipeFavoriteButton />\n    <LogoutButton />\n  </section>\n);\n\nexport default ProfileContainer;\n","import React from 'react';\nimport { PageTitle, LinkButton } from '../atoms';\nimport profileIcon from '../../images/profileIcon.svg';\nimport { Footer } from '../molecules';\nimport ProfileContainer from '../molecules/ProfileContainer';\n\nconst Profile = () => (\n  <div>\n    <header>\n      <LinkButton\n        src={ profileIcon }\n        alt=\"perfil\"\n        href=\"/perfil\"\n        testid=\"profile-top-btn\"\n      />\n      <PageTitle>Perfil</PageTitle>\n    </header>\n    <ProfileContainer />\n    <Footer />\n  </div>\n);\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport {\n  getFavoriteRecipeExistence,\n  removeFavoriteRecipe,\n  saveFavoriteRecipes,\n} from '../../utils/localStorage';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\n\nconst FavoriteButton = ({ id, recipe, foodOrDrink, favorite, index }) => {\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  useEffect(() => {\n    if (favorite) {\n      setIsFavorite(true);\n    } else {\n      setIsFavorite(getFavoriteRecipeExistence(id));\n    }\n  }, [id, favorite]);\n\n  const handleFavorite = () => {\n    if (isFavorite) {\n      removeFavoriteRecipe(id);\n      setIsFavorite(false);\n      if (favorite) {\n        const card = document.getElementById(`${index}-card-recipe`);\n        card.remove();\n      }\n    } else {\n      saveFavoriteRecipes(recipe, foodOrDrink);\n      setIsFavorite(true);\n    }\n  };\n\n  return (\n    <input\n      type=\"image\"\n      src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n      alt=\"share\"\n      data-testid={ favorite ? `${index}-horizontal-favorite-btn` : 'favorite-btn' }\n      onClick={ handleFavorite }\n    />\n  );\n};\n\nFavoriteButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  recipe: PropTypes.shape(PropTypes.string).isRequired,\n  foodOrDrink: PropTypes.string.isRequired,\n  favorite: PropTypes.bool.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default FavoriteButton;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../../images/shareIcon.svg';\nimport FavoriteButton from '../atoms/FavoriteButton';\n\nconst RecipeDoneCard = ({ recipe, index, isFavorite }) => (\n  <div id={ `${index}-card-recipe` }>\n    <Link to={ `/${recipe.type}s/${recipe.id}` }>\n      <img\n        src={ recipe.image }\n        alt={ recipe.name }\n        width=\"120px\"\n        data-testid={ `${index}-horizontal-image` }\n      />\n      <h1\n        data-testid={ `${index}-horizontal-name` }\n        aria-hidden\n      >\n        { recipe.name }\n      </h1>\n    </Link>\n    <p\n      data-testid={ `${index}-horizontal-top-text` }\n    >\n      {recipe.type === 'bebida' ? 'Alcoholic' : `${recipe.area} - ${recipe.category}`}\n    </p>\n    {!isFavorite\n    && <p data-testid={ `${index}-horizontal-done-date` }>{ recipe.doneDate }</p>}\n    <input\n      type=\"image\"\n      src={ shareIcon }\n      alt=\"Share\"\n      onClick={ () => {\n        const url = isFavorite\n          ? window.location.href.toString().split('/receitas-favoritas')[0]\n          : window.location.href.toString().split('/receitas-feitas')[0];\n        const newUrl = `${url}/${recipe.type}s/${recipe.id}`;\n        window.navigator.clipboard.writeText(newUrl);\n        const alerta = document.createElement('p');\n        alerta.innerHTML = 'Link copiado!';\n        alerta.classList.add('alerta');\n        alerta.style.display = 'none';\n        document.body.appendChild(alerta);\n      } }\n      data-testid={ `${index}-horizontal-share-btn` }\n    />\n    {isFavorite && <FavoriteButton\n      id={ recipe.id }\n      foodOrDrink={ recipe.type === 'comida' ? 'Meal' : 'Drink' }\n      favorite={ isFavorite }\n      index={ index }\n    />}\n    {!isFavorite && Array.from(recipe.tags).map((tag, i) => (\n      <p\n        key={ i }\n        data-testid={ `${index}-${tag}-horizontal-tag` }\n      >\n        {tag}\n      </p>))}\n  </div>\n);\n\nRecipeDoneCard.propTypes = {\n  recipe: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n}.isRequired;\n\nexport default RecipeDoneCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport RecipeDoneCard from '../molecules/RecipeDoneCard';\n\nconst RecipeDoneContainer = ({ recipes, isFavorite }) => (\n  <div>\n    {recipes && recipes.map((recipe, index) => (<RecipeDoneCard\n      key={ index }\n      index={ index }\n      recipe={ recipe }\n      isFavorite={ isFavorite }\n    />))}\n  </div>\n);\n\nRecipeDoneContainer.propTypes = {\n  isFavorite: PropTypes.bool.isRequired,\n  recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default RecipeDoneContainer;\n","import React, { useState } from 'react';\nimport { PageTitle, LinkButton } from '../../atoms';\nimport profileIcon from '../../../images/profileIcon.svg';\nimport RecipeDoneContainer from '../../organisms/RecipeDoneContainer';\nimport { getDoneRecipes } from '../../../utils/localStorage';\n\nconst RecipesDone = () => {\n  const [recipes, setRecipes] = useState([]);\n\n  return (\n    <div>\n      <header>\n        <LinkButton\n          src={ profileIcon }\n          alt=\"perfil\"\n          href=\"/perfil\"\n          testid=\"profile-top-btn\"\n        />\n        <PageTitle>Receitas Feitas</PageTitle>\n      </header>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={ () => setRecipes(getDoneRecipes()) }\n      >\n        All\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={ () => {\n          setRecipes(getDoneRecipes().filter((recipe) => recipe.type === 'comida'));\n        } }\n      >\n        Food\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={ () => {\n          setRecipes(getDoneRecipes().filter((recipe) => recipe.type === 'bebida'));\n        } }\n      >\n        Drink\n      </button>\n      { recipes.length ? <RecipeDoneContainer isFavorite={ false } recipes={ recipes } />\n        : <RecipeDoneContainer isFavorite={ false } recipes={ getDoneRecipes() } /> }\n    </div>\n  );\n};\n\nexport default RecipesDone;\n","import React from 'react';\nimport { PageTitle, LinkButton } from '../../atoms';\nimport profileIcon from '../../../images/profileIcon.svg';\nimport { getFavoriteRecipes } from '../../../utils/localStorage';\nimport RecipeDoneContainer from '../../organisms/RecipeDoneContainer';\n\nconst RecipesFavorites = () => {\n  const [recipes, setRecipes] = React.useState([]);\n\n  return (\n    <div>\n      <header>\n        <LinkButton\n          src={ profileIcon }\n          alt=\"perfil\"\n          href=\"/perfil\"\n          testid=\"profile-top-btn\"\n        />\n        <PageTitle>Receitas Favoritas</PageTitle>\n      </header>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={ () => setRecipes(getFavoriteRecipes()) }\n      >\n        All\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={ () => {\n          setRecipes(getFavoriteRecipes().filter((recipe) => recipe.type === 'comida'));\n        } }\n      >\n        Food\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={ () => {\n          setRecipes(getFavoriteRecipes().filter((recipe) => recipe.type === 'bebida'));\n        } }\n      >\n        Drink\n      </button>\n      { recipes.length ? <RecipeDoneContainer recipes={ recipes } isFavorite />\n        : <RecipeDoneContainer isFavorite recipes={ getFavoriteRecipes() } /> }\n    </div>\n  );\n};\n\nexport default RecipesFavorites;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { saveDoneRecipe } from '../../utils/localStorage';\n\nconst RecipeButtonFinished = ({ disabled, recipe, foodOrDrink }) => {\n  const [redirect, setRedirect] = useState(false);\n\n  if (redirect) return <Redirect to=\"/receitas-feitas\" />;\n\n  return (\n    <button\n      style={ {\n        with: '100%',\n        position: 'fixed',\n        bottom: '0',\n      } }\n      disabled={ disabled }\n      type=\"button\"\n      data-testid=\"finish-recipe-btn\"\n      onClick={ () => {\n        saveDoneRecipe(recipe, foodOrDrink);\n        setRedirect(true);\n      } }\n    >\n      Finalizar Receita\n    </button>\n  );\n};\n\nRecipeButtonFinished.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  foodOrDrink: PropTypes.string.isRequired,\n  recipe: PropTypes.object.isRequired,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  disabled: state.button.disabled,\n});\n\nexport default connect(mapStateToProps)(RecipeButtonFinished);\n","import React from 'react';\nimport shareIcon from '../../images/shareIcon.svg';\n\nconst ShareButton = () => (\n  <input\n    type=\"image\"\n    src={ shareIcon }\n    alt=\"share\"\n    data-testid=\"share-btn\"\n    onClick={ () => {\n      window.navigator.clipboard.writeText(window.location.href.toString()\n        .split('/in-progress')[0]);\n      const alerta = document.createElement('p');\n      alerta.innerHTML = 'Link copiado!';\n      alerta.classList.add('alerta');\n      alerta.style.display = 'none';\n      document.body.appendChild(alerta);\n    } }\n  />\n);\n\nexport default ShareButton;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { RecipeButtonStatus } from '../atoms';\nimport FavoriteButton from '../atoms/FavoriteButton';\nimport RecipeButtonFinished from '../atoms/RecipeButtonFinished';\nimport ShareButton from '../atoms/ShareButton';\nimport YoutubeVideo from '../atoms/YoutubeVideo';\nimport { IngredientsContainer, RecommendationContainer } from '../molecules';\n\nconst generateStatusButton = (statusOfRecipe, foodOrDrink, recipe, ingredients) => {\n  switch (statusOfRecipe) {\n  case 'done':\n    return null;\n  case 'inProgress':\n    return (<RecipeButtonStatus\n      foodOrDrink={ foodOrDrink }\n      recipeId={ recipe[`id${foodOrDrink}`] }\n      ingredients={ ingredients }\n    />);\n  case 'toDo':\n    return (<RecipeButtonFinished\n      foodOrDrink={ foodOrDrink }\n      recipe={ recipe }\n    />);\n  default:\n    return null;\n  }\n};\n\nconst RecipeDetails = ({ recipe, foodOrDrink, status }) => {\n  const getRecipeIngredients = () => {\n    const MAX_INGREDIENTS = 20;\n    const ingredients = [];\n    for (let i = 1; i <= MAX_INGREDIENTS; i += 1) {\n      if (recipe[`strIngredient${i}`] !== ''\n      && recipe[`strIngredient${i}`]) {\n        ingredients.push(recipe[`strIngredient${i}`]);\n      }\n    }\n    return ingredients;\n  };\n\n  const getRecipeMeasurements = () => {\n    const MAX_MEASUREMENTS = 20;\n    const measurements = [];\n    for (let i = 1; i <= MAX_MEASUREMENTS; i += 1) {\n      if (recipe[`strMeasure${i}`] !== ''\n      && recipe[`strMeasure${i}`] !== ' '\n      && recipe[`strMeasure${i}`]) {\n        measurements.push(recipe[`strMeasure${i}`]);\n      }\n    }\n    return measurements;\n  };\n\n  return (\n    <section>\n      <img src={ recipe[`str${foodOrDrink}Thumb`] } alt=\"\" data-testid=\"recipe-photo\" />\n      <h1 data-testid=\"recipe-title\">{recipe[`str${foodOrDrink}`]}</h1>\n      <ShareButton />\n      <FavoriteButton\n        id={ recipe[`id${foodOrDrink}`] }\n        recipe={ recipe }\n        foodOrDrink={ foodOrDrink }\n        index={ 0 }\n      />\n      <p data-testid=\"recipe-category\">\n        {foodOrDrink === 'Drink'\n          ? recipe.strAlcoholic : recipe.strCategory }\n      </p>\n      <IngredientsContainer\n        ingredients={ getRecipeIngredients() }\n        measurements={ getRecipeMeasurements() }\n        foodOrDrink={ foodOrDrink }\n        id={ recipe[`id${foodOrDrink}`] }\n        status={ status }\n      />\n      <p data-testid=\"instructions\">{ recipe.strInstructions }</p>\n      <div data-testid=\"video\">\n        {recipe.strYoutube && <YoutubeVideo url={ recipe.strYoutube } />}\n      </div>\n      <RecommendationContainer\n        foodOrDrink={ foodOrDrink }\n      />\n      {generateStatusButton(status, foodOrDrink, recipe, getRecipeIngredients())}\n    </section>\n  );\n};\n\nRecipeDetails.propTypes = {\n  foodOrDrink: PropTypes.string.isRequired,\n  recipe: PropTypes.shape({\n    strAlcoholic: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    strYoutube: PropTypes.string,\n  }).isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nexport default RecipeDetails;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport RecipeDetails from '../../organisms/RecipeDetails';\n\nconst DrinkDetails = () => {\n  const [recipe, setRecipe] = useState();\n  const { id } = useParams();\n\n  const fetchRecipe = async (recipeId) => {\n    const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${recipeId}`);\n    const data = await response.json();\n    setRecipe(data.drinks[0]);\n  };\n\n  useEffect(() => {\n    fetchRecipe(id);\n  }, [id]);\n\n  return (\n    <div data-testid=\"drink-detail\">\n      {recipe && <RecipeDetails\n        recipe={ recipe }\n        foodOrDrink=\"Drink\"\n        status=\"inProgress\"\n      />}\n    </div>\n  );\n};\n\nexport default DrinkDetails;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport RecipeDetails from '../../organisms/RecipeDetails';\n\nconst FoodDetails = () => {\n  const [recipe, setRecipe] = useState();\n  const { id } = useParams();\n\n  const fetchRecipe = async (recipeId) => {\n    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${recipeId}`);\n    const data = await response.json();\n    setRecipe(data.meals[0]);\n  };\n\n  useEffect(() => {\n    fetchRecipe(id);\n  }, [id]);\n\n  return (\n    <div data-testid=\"food-detail\">\n      {recipe && <RecipeDetails\n        recipe={ recipe }\n        foodOrDrink=\"Meal\"\n        status=\"inProgress\"\n      />}\n    </div>\n  );\n};\n\nexport default FoodDetails;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    Not Found\n  </div>\n);\n\nexport default NotFound;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport RecipeDetails from '../../organisms/RecipeDetails';\n\nconst FoodInProgress = () => {\n  const [recipe, setRecipe] = useState();\n  const { id } = useParams();\n\n  const fetchRecipe = async (recipeId) => {\n    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${recipeId}`);\n    const data = await response.json();\n    setRecipe(data.meals[0]);\n  };\n\n  useEffect(() => {\n    fetchRecipe(id);\n  }, [id]);\n\n  return (\n    <div>\n      {recipe && <RecipeDetails\n        recipe={ recipe }\n        foodOrDrink=\"Meal\"\n        status=\"toDo\"\n      />}\n    </div>\n  );\n};\n\nexport default FoodInProgress;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport RecipeDetails from '../../organisms/RecipeDetails';\n\nconst DrinkInProgress = () => {\n  const [recipe, setRecipe] = useState();\n  const { id } = useParams();\n\n  const fetchRecipe = async (recipeId) => {\n    const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${recipeId}`);\n    const data = await response.json();\n    setRecipe(data.drinks[0]);\n  };\n\n  useEffect(() => {\n    fetchRecipe(id);\n  }, [id]);\n\n  return (\n    <div>\n      {recipe && <RecipeDetails\n        recipe={ recipe }\n        foodOrDrink=\"Drink\"\n        status=\"toDo\"\n      />}\n    </div>\n  );\n};\n\nexport default DrinkInProgress;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  DrinkDetails,\n  Drinks,\n  Explore,\n  ExploreDrinks,\n  ExploreFoods,\n  ExploreFoodIngredients,\n  ExploreDrinkIngredients,\n  ExploreOrigin,\n  FoodDetails,\n  Foods,\n  Login,\n  Profile,\n  RecipesDone,\n  RecipesFavorites,\n  NotFound,\n} from './Components/pages';\nimport FoodInProgress from './Components/pages/InProgress/FoodInProgress';\nimport DrinkInProgress from './Components/pages/InProgress/DrinkInProgress';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/comidas\" component={ Foods } />\n      <Route exact path=\"/bebidas\" component={ Drinks } />\n      <Route\n        exact\n        path=\"/comidas/:id\"\n        component={ FoodDetails }\n      />\n      <Route\n        exact\n        path=\"/bebidas/:id\"\n        component={ DrinkDetails }\n      />\n      <Route\n        exact\n        path=\"/comidas/:id/in-progress\"\n        component={ FoodInProgress }\n      />\n      <Route\n        exact\n        path=\"/bebidas/:id/in-progress\"\n        component={ DrinkInProgress }\n      />\n      <Route exact path=\"/explorar\" component={ Explore } />\n      <Route exact path=\"/explorar/comidas\" component={ ExploreFoods } />\n      <Route exact path=\"/explorar/bebidas\" component={ ExploreDrinks } />\n      <Route\n        exact\n        path=\"/explorar/comidas/ingredientes\"\n        component={ ExploreFoodIngredients }\n      />\n      <Route\n        exact\n        path=\"/explorar/bebidas/ingredientes\"\n        component={ ExploreDrinkIngredients }\n      />\n      <Route exact path=\"/explorar/comidas/area\" component={ ExploreOrigin } />\n      <Route exact path=\"/explorar/bebidas/area\" component={ NotFound } />\n      <Route exact path=\"/perfil\" component={ Profile } />\n      <Route exact path=\"/receitas-feitas\" component={ RecipesDone } />\n      <Route exact path=\"/receitas-favoritas\" component={ RecipesFavorites } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_SEARCH_OPTION, SET_WORD_SEARCHED } from '../actions';\n\nconst INITIAL_STATE = {\n  option: '',\n  searched: '',\n};\n\nfunction searchReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case SET_SEARCH_OPTION:\n    return {\n      ...state,\n      option: action.payload,\n    };\n  case SET_WORD_SEARCHED:\n    return {\n      ...state,\n      searched: action.payload,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default searchReducer;\n","import {\n  REQUEST_RECIPES,\n  RECEIVE_RECIPES,\n  RECEIVE_CATEGORIES,\n  REQUEST_CATEGORIES,\n  INGREDIENT,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  recipes: [],\n  categories: [],\n  buttonLoaded: false,\n  loaded: false,\n  isIngredient: false,\n};\n\nconst recipeReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_RECIPES:\n    return {\n      ...state,\n      loaded: false,\n    };\n  case RECEIVE_RECIPES:\n    return { ...state, recipes: action.payload, loaded: true };\n  case REQUEST_CATEGORIES:\n    return {\n      ...state,\n      buttonLoaded: false,\n    };\n  case RECEIVE_CATEGORIES:\n    return { ...state,\n      categories: action.payload,\n      buttonLoaded: true,\n    };\n  case INGREDIENT:\n    return { ...state, isIngredient: !state.isIngredient };\n  default:\n    return state;\n  }\n};\n\nexport default recipeReducer;\n","import {\n  SET_DISABLED,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  disabled: true,\n};\n\nconst recipeReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_DISABLED:\n    return {\n      ...state,\n      disabled: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default recipeReducer;\n","import { combineReducers } from 'redux';\nimport searchReducer from './searchReducer';\nimport recipeReducer from './recipeReducers';\nimport buttonFinished from './buttonFinished';\n\nconst rootReducer = combineReducers({\n  searchReducer,\n  recipes: recipeReducer,\n  button: buttonFinished,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";"],"sourceRoot":""}